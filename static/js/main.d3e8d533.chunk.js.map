{"version":3,"sources":["Info.js","TabMe.js","ReadOnlyCopyField.js","App.js","serviceWorker.js","index.js"],"names":["BIRTHDAY","Date","styles","root","marginLeft","marginRight","header","fontSize","textAlign","align","paragraph","TabMe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateAge","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","getCurrentExperiences","currentExperiences","state","react_default","a","createElement","index_es","map","experience","className","icon","style","primary","secondary","handleOtherExperienceClick","event","setState","otherExperienceDialogOpen","selectedOtherExperience","handleOtherExperienceDialogClose","getOtherExperiences","otherExperiences","button","divider","onClick","dialogTitle","dialogText","Typography_default","open","onClose","position","right","top","text","display","marginBottom","color","Component","inline","marginTop","ReadOnlyCopyField","emailRef","getCopyButton","document","queryCommandSupported","InputAdornment_default","IconButton_default","copyToClipboard","Icon_default","e","select","execCommand","target","focus","toast","isActive","copyToastId","newToastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","_this2","TextField_default","variant","value","inputRef","textArea","InputProps","endAdornment","readOnly","configure","flexGrow","width","appBar","title","footer","margin","App","handleChange","currentTab","AppBar_default","src_ReadOnlyCopyField","Tabs_default","onChange","centered","Tab_default","label","disabled","src_TabMe","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3e8d533.chunk.js","sourcesContent":["export const EMAIL = \"jurcaua@gmail.com\";\r\nexport const BIRTHDAY = new Date(1997, 8, 25);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { BIRTHDAY } from \"./Info\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  }\r\n};\r\n\r\nclass TabMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentExperiences: [\r\n        {\r\n          primary:\r\n            \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n          secondary: \"Python / C#\",\r\n          icon: \"code\"\r\n        },\r\n        {\r\n          primary: \"Maintaining our automated integration-testing pipeline\",\r\n          secondary: \"C++\",\r\n          icon: \"code\"\r\n        },\r\n        {\r\n          primary: \"Developing an online service management web tool\",\r\n          secondary: \"React / Redux\",\r\n          icon: \"code\"\r\n        }\r\n      ],\r\n      otherExperiences: [\r\n        {\r\n          primary:\r\n            \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n          secondary: \"Unity\",\r\n          icon: \"videogame_asset\",\r\n          dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n          dialogText: [\r\n            \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n            \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n            \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n          ]\r\n        },\r\n        {\r\n          primary:\r\n            \"Teaching video game design to at-risk youth, following a game to completion\",\r\n          secondary: \"Construct 2\",\r\n          icon: \"school\",\r\n          dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n          dialogText: [\r\n            \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n            \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n            \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n          ]\r\n        },\r\n        {\r\n          primary:\r\n            \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n          secondary: \"SQL Server (TSQL)\",\r\n          icon: \"table_chart\",\r\n          dialogTitle: \"Inmar - Systems Support\",\r\n          dialogText: [\r\n            \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n            \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n            \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n          ]\r\n        }\r\n      ],\r\n      selectedOtherExperience: null,\r\n      otherExperienceDialogOpen: false\r\n    };\r\n  }\r\n\r\n  calculateAge = () => {\r\n    var ageDifMs = Date.now() - BIRTHDAY.getTime();\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  };\r\n\r\n  getCurrentExperiences = () => {\r\n    const { currentExperiences } = this.state;\r\n    return (\r\n      <List>\r\n        {currentExperiences.map(experience => {\r\n          return (\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOtherExperienceClick = (event, experience) => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: true,\r\n      selectedOtherExperience: experience\r\n    });\r\n  };\r\n\r\n  handleOtherExperienceDialogClose = event => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: false\r\n    });\r\n  };\r\n\r\n  getOtherExperiences = () => {\r\n    const { otherExperiences } = this.state;\r\n    return (\r\n      <List>\r\n        {otherExperiences.map(experience => {\r\n          return (\r\n            <ListItem\r\n              button\r\n              divider=\"true\"\r\n              onClick={event => {\r\n                this.handleOtherExperienceClick(event, experience);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>Hello there! I'm Alex.</Typography>\r\n\r\n        {/* Short Intro */}\r\n        <Typography style={styles.paragraph}>\r\n          Currently {this.calculateAge()} years old, and a fourth year student\r\n          at the <b>University of Toronto</b> -- studying Computer Science with\r\n          focuses in Algorithms, System Design, and Game Design.\r\n        </Typography>\r\n        <br />\r\n\r\n        {/* Current Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          I am currently doing a 15 month internship at <b>Ubisoft Toronto</b>{\" \"}\r\n          where I work on the tools team. Responsible for a variety of things,\r\n          my focuses lie in:\r\n        </Typography>\r\n        {this.getCurrentExperiences()}\r\n\r\n        {/* Other Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          Other related experience in the industry includes:\r\n        </Typography>\r\n        <List>{this.getOtherExperiences()}</List>\r\n\r\n        {this.state.selectedOtherExperience && (\r\n          <Dialog\r\n            open={this.state.otherExperienceDialogOpen}\r\n            onClose={this.handleOtherExperienceDialogClose}\r\n          >\r\n            <DialogTitle>\r\n              {this.state.selectedOtherExperience.dialogTitle}\r\n              <IconButton\r\n                onClick={this.handleOtherExperienceDialogClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {this.state.selectedOtherExperience.dialogText.map(text => {\r\n                return (\r\n                  <div style={{ display: \"inline-flex\", marginBottom: \"10px\" }}>\r\n                    <i className=\"material-icons\">arrow_right</i>\r\n                    <DialogContentText\r\n                      style={{\r\n                        marginLeft: \"10px\",\r\n                        color: \"#363738\"\r\n                      }}\r\n                    >\r\n                      {text}\r\n                    </DialogContentText>\r\n                  </div>\r\n                );\r\n              })}\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMe;\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst styles = {\r\n  inline: {\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    marginTop: \"10px\",\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  }\r\n};\r\n\r\nclass ReadOnlyCopyField extends Component {\r\n  emailRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      copyToastId: null\r\n    };\r\n  }\r\n\r\n  getCopyButton = () => {\r\n    if (document.queryCommandSupported(\"copy\")) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton style={styles.inline} onClick={this.copyToClipboard}>\r\n            <Icon style={{ fontSize: \"20px\" }}>file_copy</Icon>\r\n          </IconButton>\r\n        </InputAdornment>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  copyToClipboard = e => {\r\n    this.emailRef.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n\r\n    if (!toast.isActive(this.state.copyToastId)) {\r\n      let newToastId = toast(\"Copied to clipboard!\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true\r\n      });\r\n      this.setState({\r\n        copyToastId: newToastId\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        <TextField\r\n          style={styles.text}\r\n          variant=\"outlined\"\r\n          value={text}\r\n          inputRef={textArea => (this.emailRef = textArea)}\r\n          InputProps={{\r\n            endAdornment: this.getCopyButton(),\r\n            style: { fontSize: 15 },\r\n            readOnly: true\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadOnlyCopyField;\r\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Tooltip } from \"@material-ui/core\";\nimport TabMe from \"./TabMe\";\nimport ReadOnlyCopyField from \"./ReadOnlyCopyField\";\nimport { EMAIL } from \"./Info\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  appBar: {\n    marginBottom: \"20px\"\n  },\n\n  title: {\n    fontSize: \"50px\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n\n  footer: {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    margin: \"10px\",\n    align: \"center\"\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ currentTab: value });\n  };\n\n  render() {\n    const { currentTab } = this.state;\n\n    return (\n      <div className={styles.root}>\n        <AppBar position=\"static\" color=\"default\" style={styles.appBar}>\n          <Typography style={styles.title} variant=\"h2\">\n            Alexander Jurcau\n          </Typography>\n          <ReadOnlyCopyField text={EMAIL} />\n          <Tabs value={currentTab} onChange={this.handleChange} centered>\n            <Tooltip title=\"Summary, contact info, etc.\">\n              <Tab label=\"Me\" icon={<i className=\"material-icons\">face</i>} />\n            </Tooltip>\n            <Tooltip title=\"Notable projects and experience.\">\n              <Tab\n                disabled\n                label=\"Projects\"\n                icon={<i className=\"material-icons\">laptop_mac</i>}\n              />\n            </Tooltip>\n            <Tooltip title=\"Things I like.\">\n              <Tab\n                disabled\n                label=\"Interests\"\n                icon={<i className=\"material-icons\">favorite_border</i>}\n              />\n            </Tooltip>\n          </Tabs>\n        </AppBar>\n        {currentTab === 0 && <TabMe />}\n        {currentTab === 1 && <div />}\n        {currentTab === 2 && <div />}\n\n        <AppBar position=\"static\" color=\"default\">\n          <Typography style={styles.footer}>© 2019 Alexander Jurcau</Typography>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}