{"version":3,"sources":["resume/Resume.pdf","Utils.js","Info.js","Emoji.js","Localization.js","Constants.js","ReadOnlyCopyField.js","tabs/TabNavigation.js","resume/Resume.js","tabs/me/TabMe.js","tabs/interests/TabInterests.js","tabs/TabRouteRendering.js","App.js","Flags.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["module","exports","__webpack_require__","p","msInMonth","msInYear","getYearsAgo","date","from","arguments","length","undefined","Date","Math","floor","getTime","BIRTHDAY","JAPANESE_STARTED_LEARNING","Emoji","props","react_default","a","createElement","className","role","aria-label","label","aria-hidden","symbol","currentLanguage","DEFAULT_LANGUAGE","styles","root","marginLeft","marginRight","header","fontSize","textAlign","align","subheader","paragraph","drawerSummary","basicStrings","en","time","year","years","month","months","connector","space","jp","strings","nameFirst","nameSeperator","nameLast","greeting","openResume","copyConfirmNotification","tabs","me","tooltip","summary","Typography","style","currentExperiences","primary","secondary","icon","otherExperiencesHeader","otherExperiences","dialogTitle","dialogText","projects","interests","clickPrompt","content","details","Fragment","getTimeLearningJapaneseString","src_Emoji","getLanguage","localized","lang","getMonthsAgo","yearsString","concat","SUPPORTED_LANGUAGES","RootTab","path","disabled","GetRootTabRouterPath","tab","GetRootTabLinkToPath","currentLang","inline","display","text","marginTop","ReadOnlyCopyField","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emailRef","getCopyButton","document","queryCommandSupported","InputAdornment","position","Tooltip","title","IconButton","onClick","copyToClipboard","Icon","e","select","execCommand","target","focus","toast","isActive","state","copyToastId","newToastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setState","_this2","TextField","variant","value","inputRef","textArea","InputProps","endAdornment","readOnly","Component","CloneProps","children","objectWithoutProperties","TabItemLink","_ref","item","tabProps","placement","Tab","assign","component","RouterLink","to","defaultProps","TabNavigation","_ref2","pathname","Tabs","centered","keys","map","tabKey","key","pdfjs","GlobalWorkerOptions","workerSrc","version","dialogPDFWidthMapping","sm","md","lg","xl","ResumeDialog","setDivSize","pdfWrapper","width","getBoundingClientRect","dialogSize","console","error","dialogOpen","window","addEventListener","throttle","removeEventListener","id","height","overflow","ref","Dialog","open","onClose","fullWidth","maxWidth","DialogContent","entry","file","resume","pageNumber","renderTextLayer","Divider","right","top","TabMe","getIntro","point","index","getCurrentExperiences","List","experience","ListItem","ListItemIcon","ListItemText","handleOtherExperienceClick","event","otherExperienceDialogOpen","selectedOtherExperience","handleOtherExperienceDialogClose","getOtherExperiencesHeader","getOtherExperiences","button","divider","getOtherExperiencesPopup","DialogTitle","marginBottom","DialogContentText","color","handleOpenResume","resumeOpen","handleCloseResume","Button","resume_Resume","interestsRoot","padding","paper","margin","slideTimeout","enter","TabInterests","_useState","useState","_useState2","slicedToArray","currentTab","setCurrentTab","handleTabChange","getInterests","Paper","elevation","onChange","Slide","direction","in","exit","timeout","unmountOnExit","TabRouteRendering","react_router","exact","render","me_TabMe","interests_TabInterests","configure","useStyles","makeStyles","theme","flexGrow","appBar","footer","svgButton","zIndex","bottom","spacing","App","classes","history","useHistory","location","useLocation","changeLanguage","language","reset","log","splitURL","split","slice","toPush","join","push","getLocalizedName","useEffect","locationLang","find","supportedLang","switchLanguageTo","switchLanguageToFlag","xmlns","viewBox","fill","x","y","cx","cy","r","d","AppBar","src_ReadOnlyCopyField","tabs_TabNavigation","tabs_TabRouteRendering","getFullYear","Boolean","hostname","match","createMuiTheme","overrides","MuiTooltip","ReactDOM","ThemeProvider","react_router_dom","basename","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.3383210c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.f2829ff3.pdf\";","let msInDay = 24 * 60 * 60 * 1000;\r\nlet msInMonth = 30 * 24 * 60 * 60 * 1000;\r\nlet msInYear = 365 * 24 * 60 * 60 * 1000;\r\n\r\nexport function getCurrentYear() {\r\n  return new Date().getFullYear();\r\n}\r\n\r\nexport function getYearsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInYear);\r\n}\r\n\r\nexport function getMonthsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInMonth);\r\n}\r\n\r\nexport function getDaysAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInDay);\r\n}\r\n","export const EMAIL = \"jurcaua@gmail.com\";\r\nexport const BIRTHDAY = new Date(1997, 7, 25);  // why are months.... 0 - 11.....\r\nexport const JAPANESE_STARTED_LEARNING = new Date(2017, 6, 21);\r\nexport const JLPT_LEVEL_CURRENTLY_HAVE = 5;\r\nexport const JLPT_LEVEL_GOING_FOR = 2;\r\n","import React from \"react\";\r\n\r\nconst Emoji = props => (\r\n  <span\r\n    className=\"emoji\"\r\n    role=\"img\"\r\n    aria-label={props.label ? props.label : \"\"}\r\n    aria-hidden={props.label ? \"false\" : \"true\"}\r\n  >\r\n    {props.symbol}\r\n  </span>\r\n);\r\n\r\nexport default Emoji;\r\n","import React from \"react\";\r\nimport { getYearsAgo, getMonthsAgo } from \"./Utils\";\r\nimport {\r\n  BIRTHDAY,\r\n  JAPANESE_STARTED_LEARNING,\r\n  JLPT_LEVEL_GOING_FOR,\r\n  JLPT_LEVEL_CURRENTLY_HAVE\r\n} from \"./Info\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Emoji from \"./Emoji\";\r\nimport { DEFAULT_LANGUAGE } from \"./Constants\";\r\n\r\nlet currentLanguage = DEFAULT_LANGUAGE;\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  },\r\n\r\n  drawerSummary: {\r\n    fontSize: \"22px\",\r\n    marginLeft: \"10px\"\r\n  }\r\n};\r\n\r\nconst basicStrings = {\r\n  en: {\r\n    time: {\r\n      year: \"year\",\r\n      years: \"years\",\r\n      month: \"month\",\r\n      months: \"months\",\r\n      connector: \"and\",\r\n      space: \" \"\r\n    }\r\n  },\r\n  jp: {\r\n    time: {\r\n      year: \"年間\",\r\n      years: \"年間\",\r\n      month: \"ヶ月\",\r\n      months: \"ヶ月\",\r\n      connector: \"の\",\r\n      space: \"\"\r\n    }\r\n  }\r\n};\r\n\r\nexport const strings = {\r\n  en: {\r\n    nameFirst: \"Alexander\",\r\n    nameSeperator: \" \",\r\n    nameLast: \"Jurcau\",\r\n    greeting: \"Hello there! I'm Alex.\",\r\n    openResume: \"View My Resume!\",\r\n    copyConfirmNotification: \"Copied to clipboard!\",\r\n    tabs: {\r\n      me: {\r\n        label: \"Me\",\r\n        tooltip: \"Qualification overview.\",\r\n        summary: [\r\n          <Typography style={styles.paragraph}>\r\n            Currently {getYearsAgo(BIRTHDAY)} years old, and a fourth year student at the{\" \"}\r\n            <b>University of Toronto</b> -- studying Computer Science with focuses in Algorithms,\r\n            System Design, and Game Design.\r\n          </Typography>,\r\n          <Typography style={styles.paragraph}>\r\n            I worked for <b>Ubisoft Toronto</b> (Watch Dogs Legion) on the tools team for 15 months.\r\n            Responsible for a variety of things, my focuses were:\r\n          </Typography>\r\n        ],\r\n        currentExperiences: [\r\n          {\r\n            primary:\r\n              \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n            secondary: \"Python, C#\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Maintaining our automated integration-testing pipeline\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Developing an online service management web tool\",\r\n            secondary: \"React / Redux, Python, C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Resolving Sony TRC onlines / UI issues\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          }\r\n        ],\r\n        otherExperiencesHeader: (\r\n          <Typography style={styles.paragraph}>\r\n            Other related experience in the industry includes:\r\n          </Typography>\r\n        ),\r\n        otherExperiences: [\r\n          {\r\n            primary:\r\n              \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n            secondary: \"Unity\",\r\n            icon: \"videogame_asset\",\r\n            dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n            dialogText: [\r\n              \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n              \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n              \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n            ]\r\n          },\r\n          {\r\n            primary: \"Teaching video game design to at-risk youth, following a game to completion\",\r\n            secondary: \"Construct 2\",\r\n            icon: \"school\",\r\n            dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n            dialogText: [\r\n              \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n              \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n              \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n            secondary: \"SQL Server (TSQL)\",\r\n            icon: \"table_chart\",\r\n            dialogTitle: \"Inmar - Systems Support\",\r\n            dialogText: [\r\n              \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n              \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n              \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      projects: {\r\n        label: \"Projects\",\r\n        tooltip: \"Notable projects and experience.\"\r\n      },\r\n      interests: {\r\n        label: \"Interests\",\r\n        tooltip: \"Things I like.\",\r\n        header: \"Welcome to my world!\",\r\n        subheader: \"I also do a couple more things outside of work!\",\r\n        clickPrompt: \"Click one of my interests!\",\r\n        content: [\r\n          {\r\n            summary: \"Japanese\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I have been learning Japanese for about{\" \"}\r\n                  {<b>{getTimeLearningJapaneseString(\"en\")}</b>}. I currently hold a{\" \"}\r\n                  {<b>JLPT N{JLPT_LEVEL_CURRENTLY_HAVE}</b>} certification I received Dec. 2017 and\r\n                  am awaiting my results for the <b>N{JLPT_LEVEL_GOING_FOR}</b> level test I took\r\n                  this past December.\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I can have a casual or simple business level conversation with few issues, and can\r\n                  keep up with native speaking patterns and colloquial speech.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"Gaming\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>My love for programming came from games!</b> I started out playing Flash and\r\n                CD-ROM games as kid, moving on to classic games like Pokemon, Spyro, and my all-time\r\n                favourite video game series, Kingdom Hearts! Now I enjoy making games as much as I\r\n                enjoy playing them (something my kid-self would've never believed)!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          },\r\n          {\r\n            summary: \"Basketball\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                I played basketball at a <b>competitive level</b> for majority of my life, leading\r\n                up to university. Playing on countless teams and in countless leagues, and being\r\n                trained by veterans in the game -- it built a certain <u>hardwork</u> and{\" \"}\r\n                <u>team-centered</u> mindset that sticks with me to this day.\r\n              </Typography>\r\n            ),\r\n            icon: \"fitness_center\"\r\n          },\r\n          {\r\n            summary: \"Coffee\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I absolutely <i>ADORE</i> a good cup of {<Emoji symbol=\"☕\" />}. While I rarely\r\n                  feel the effects of caffeine, I stick with it for the taste! I believe a nice cup\r\n                  of black coffee is the best thing to sip on while programming.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"free_breakfast\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  jp: {\r\n    nameFirst: \"ジュルコ\",\r\n    nameSeperator: \"・\",\r\n    nameLast: \"アレックス\",\r\n    greeting: \"こんにちは！アレックスです。\",\r\n    openResume: \"履歴書\",\r\n    copyConfirmNotification: \"コーピした!\",\r\n    tabs: {\r\n      me: {\r\n        label: \"私について\",\r\n        tooltip: \"資格概要\",\r\n        summary: [\r\n          <Typography style={styles.paragraph}>\r\n            現在、<b>トロント大学</b>に通っている{getYearsAgo(BIRTHDAY)}\r\n            歳の四年生です。\r\n            コンピューターサイエンスのアルゴリズムやシステムデザインやゲームデザインを中心に学んでいます。\r\n          </Typography>,\r\n          <Typography style={styles.paragraph}>\r\n            <b>Ubisoft</b>というゲーム会社のツールチームで15ヶ月のインターンシップをしていました。\r\n            私の専門は以下のとおりです。\r\n          </Typography>\r\n        ],\r\n        currentExperiences: [\r\n          {\r\n            primary:\r\n              \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n            secondary: \"Python, C#\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Maintaining our automated integration-testing pipeline\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Developing an online service management web tool\",\r\n            secondary: \"React / Redux, Python, C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Resolving Sony TRC onlines / ui issues\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          }\r\n        ],\r\n        otherExperiencesHeader: (\r\n          <Typography style={styles.paragraph}>業界に関連する経験は以下のとおりです。</Typography>\r\n        ),\r\n        otherExperiences: [\r\n          {\r\n            primary:\r\n              \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n            secondary: \"Unity\",\r\n            icon: \"videogame_asset\",\r\n            dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n            dialogText: [\r\n              \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n              \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n              \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n            ]\r\n          },\r\n          {\r\n            primary: \"Teaching video game design to at-risk youth, following a game to completion\",\r\n            secondary: \"Construct 2\",\r\n            icon: \"school\",\r\n            dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n            dialogText: [\r\n              \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n              \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n              \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n            secondary: \"SQL Server (TSQL)\",\r\n            icon: \"table_chart\",\r\n            dialogTitle: \"Inmar - Systems Support\",\r\n            dialogText: [\r\n              \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n              \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n              \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      projects: {\r\n        label: \"プロジェクト\",\r\n        tooltip: \"最高の作ったプロジェクト\"\r\n      },\r\n      interests: {\r\n        label: \"興味\",\r\n        tooltip: \"好きなこと\",\r\n        header: \"私の世界へ、ようこそ！\",\r\n        subheader: \"プライベートの私を紹介します！\",\r\n        clickPrompt: \"私の興味にクリックしてください！\",\r\n        content: [\r\n          {\r\n            summary: \"日本語\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  私は{<b>{getTimeLearningJapaneseString(\"jp\")}</b>}\r\n                  日本語を勉強しています。 2017年の12月に\r\n                  <b>日本語能力試験の{JLPT_LEVEL_CURRENTLY_HAVE}級</b>に合格し、今年の年末に\r\n                  <b>{JLPT_LEVEL_GOING_FOR}級</b>\r\n                  に挑戦しました（結果未定）。\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  上級ビジネスレベルではなければ、問題なく日本語でコミュニケーションをとることが出来ます。\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>ゲームが大好きなため、プログラミングをしようと思いました。</b>\r\n                幼い頃、フラッシュゲームやCD-ROMが大好きだったので、\r\n                その頃からキングダムハーツを始め、ポケモン、スパイロ・ザ・ドラゴン等をしました。\r\n                現在はゲームをする事はゲームを作るのと同程度好きな事です。\r\n                (昔の自分だったら、その事を信じる事は出来ないかもしれません。)\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          },\r\n          {\r\n            summary: \"バスケットボール\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                (翻訳確認中) <br />\r\n                人生のほとんど、大学までに<b>競技バスケットボール</b>をしました。\r\n                優れた選手に教えられつつ、何軍にも属され、 未だにその時に習った<u>頑張り</u>や\r\n                <u>チームワーク</u>を優先する考え方が残っています。 I played basketball at a{\" \"}\r\n                <b>competitive level</b> for majority of my life, leading up to university. Playing\r\n                on countless teams and in countless leagues, and being trained by veterans in the\r\n                game -- it built a certain <u>hardwork</u> and <u>team-centered</u> mindset that\r\n                sticks with me to this day.\r\n              </Typography>\r\n            ),\r\n            icon: \"fitness_center\"\r\n          },\r\n          {\r\n            summary: \"コーヒー\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  (翻訳確認中) <br />\r\n                  よくした{<Emoji symbol=\"☕\" />}\r\n                  が大好きです。いれたてのコーヒーの味は最高ですけれども、カフェインの効果があまり感じないんです。\r\n                  プログラミングする時にはよく集中するため、コーヒーは私の一番好きな飲み物です。\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"free_breakfast\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function getLanguage() {\r\n  return currentLanguage;\r\n}\r\n\r\nexport function setLanguage(lang) {\r\n  currentLanguage = lang;\r\n}\r\n\r\nexport function localized() {\r\n  return strings[currentLanguage];\r\n}\r\n\r\n// *Sigh* This is basically a super overcomplicated function that takes in a language and will give you\r\n// a nicely formatted string that is the amount of time ive been studying Japanese\r\n// To make it more general I had to do some ugly stuff like define what a SPACE was because, whoops cant have spaces with Japanese!!\r\n// Anyways I hope no one sees this but if so, welcome to my masterpiece.\r\nexport function getTimeLearningJapaneseString(lang) {\r\n  let years = getYearsAgo(JAPANESE_STARTED_LEARNING);\r\n  let months = getMonthsAgo(JAPANESE_STARTED_LEARNING) - years * 12;\r\n  if (months >= 12) {\r\n    years += 1;\r\n    months -= 12;\r\n  }\r\n\r\n  const { space } = basicStrings[lang].time;\r\n\r\n  let yearsString = `${years}${space}${\r\n    years === 1 ? basicStrings[lang].time.year : basicStrings[lang].time.years\r\n  }`;\r\n  let monthsString = \"\";\r\n  if (months > 0) {\r\n    months = `${space}${basicStrings[lang].time.connector}${space}${months}${space}${\r\n      months === 1 ? basicStrings[lang].time.month : basicStrings[lang].time.months\r\n    }`;\r\n  }\r\n  return `${yearsString}${monthsString}`;\r\n}\r\n\r\n/*\r\ncontent: [\r\n          { summary: \"日本語\", details: \"\" },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <div>\r\n                <Typography style={styles.paragraph}>\r\n                  最初にゲームはネットでとかしていましたが、それからポケモンやSpyroや一番の好きなゲーム、キングダムハーツをしていました！Now\r\n                  I enjoy making games as much as I enjoy playing\r\n                  them　(something my kid-self would've never believed )!\r\n                </Typography>\r\n              </div>\r\n            )\r\n          },\r\n          { summary: \"バスケットボール\", details: \"\" },\r\n          { summary: \"コーヒー\", details: \"\" }\r\n        ]\r\n\r\n\r\n{\r\n            summary: \"日本語\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I have been learning Japanese for about{\" \"}\r\n                  {<b>{getTimeLearningJapaneseString()}</b>}. I currently hold a{\" \"}\r\n                  {<b>JLPT N5</b>} certification I recieved Dec. 2017 and will\r\n                  be attempting the <b>N3</b> level this coming Decemeber 2019.\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I can have a casual conversation with few issues, and can keep\r\n                  up with native speaking patterns and colloquial speech.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>\r\n                  プログラミングが好きということの理由は、子供頃にゲームはずっとをしていたんですから。{\" \"}\r\n                </b>\r\n                最初にゲームはネットでとかしていましたが、それからポケモンやSpyroや一番の好きなゲーム、キングダムハーツをしていました！\r\n                Now I enjoy making games as much as I enjoy playing them\r\n                (something my kid-self would've never believed )!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          }\r\n*/\r\n","import { getLanguage } from \"./Localization\";\r\n\r\nexport const DEFAULT_LANGUAGE = \"en\";\r\nexport const SUPPORTED_LANGUAGES = [\"en\", \"jp\"];\r\n\r\nexport const RootTab = {\r\n  me: {\r\n    path: \"\",\r\n    icon: \"face\"\r\n  },\r\n  projects: {\r\n    disabled: true,\r\n    path: \"projects\",\r\n    icon: \"laptop_mac\"\r\n  },\r\n  interests: {\r\n    path: \"interests\",\r\n    icon: \"favorite_border\"\r\n  }\r\n};\r\n\r\nexport const GetRootTabRouterPath = tab => {\r\n  if (tab === \"me\") {\r\n    return `/:lang`;\r\n  }\r\n  return `/:lang/${RootTab[tab].path}`;\r\n};\r\n\r\nexport const GetRootTabLinkToPath = tab => {\r\n  const currentLang = getLanguage();\r\n  if (tab === \"me\") {\r\n    return `/${currentLang}`;\r\n  }\r\n  return `/${getLanguage()}/${RootTab[tab].path}`;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { localized } from \"./Localization\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  inline: {\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    marginTop: \"10px\",\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  }\r\n};\r\n\r\nclass ReadOnlyCopyField extends Component {\r\n  emailRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      copyToastId: null\r\n    };\r\n  }\r\n\r\n  getCopyButton = () => {\r\n    if (document.queryCommandSupported(\"copy\")) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <Tooltip title=\"Copy to clipboard\">\r\n            <IconButton style={styles.inline} onClick={this.copyToClipboard}>\r\n              <Icon style={{ fontSize: \"20px\" }}>file_copy</Icon>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </InputAdornment>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  copyToClipboard = e => {\r\n    this.emailRef.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n\r\n    if (!toast.isActive(this.state.copyToastId)) {\r\n      let newToastId = toast(localized().copyConfirmNotification, {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true\r\n      });\r\n      this.setState({\r\n        copyToastId: newToastId\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        <TextField\r\n          style={styles.text}\r\n          variant=\"outlined\"\r\n          value={text}\r\n          inputRef={textArea => (this.emailRef = textArea)}\r\n          InputProps={{\r\n            endAdornment: this.getCopyButton(),\r\n            style: { fontSize: 15 },\r\n            readOnly: true\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadOnlyCopyField;\r\n","import React from \"react\";\r\n\r\n// External Package Imports\r\nimport PropTypes from \"prop-types\";\r\nimport { Tabs, Tooltip, Tab } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// Local Imports\r\nimport { RootTab, GetRootTabLinkToPath } from \"../Constants\";\r\nimport { localized } from \"../Localization\";\r\n\r\n// This workaround is for this issue: https://github.com/mui-org/material-ui/issues/12597\r\nfunction CloneProps(props) {\r\n  const { children, ...other } = props;\r\n  return children(other);\r\n}\r\n\r\nfunction TabItemLink({ item, icon, disabled }) {\r\n  return (\r\n    <CloneProps>\r\n      {tabProps => (\r\n        <Tooltip title={localized().tabs[item].tooltip} placement=\"bottom\">\r\n          <div>\r\n            <Tab\r\n              {...tabProps}\r\n              disabled={disabled}\r\n              label={localized().tabs[item].label}\r\n              icon={<i className=\"material-icons\">{icon}</i>}\r\n              component={RouterLink}\r\n              to={GetRootTabLinkToPath(item)}\r\n              value={GetRootTabLinkToPath(item)}\r\n            />\r\n          </div>\r\n        </Tooltip>\r\n      )}\r\n    </CloneProps>\r\n  );\r\n}\r\n\r\nTabItemLink.propTypes = {\r\n  item: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nTabItemLink.defaultProps = {\r\n  disabled: false\r\n};\r\n\r\n/* TODO: Investigate why \"value\" is necessary at useage TabItemLink in Tabs.\\\r\nThis is currently a workaround since purely just having value in the wrapped component \r\ndoes not seem to work... highlighted tab does not seem to work at all otherwise. */\r\n\r\nconst TabNavigation = ({ pathname }) => {\r\n  return (\r\n    <Tabs value={pathname} centered>\r\n      {Object.keys(RootTab).map(tabKey => (\r\n        <TabItemLink\r\n          key={tabKey}\r\n          disabled={RootTab[tabKey].disabled}\r\n          value={GetRootTabLinkToPath(tabKey)}\r\n          item={tabKey}\r\n          icon={RootTab[tabKey].icon}\r\n        />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default TabNavigation;\r\n","import React, { Component } from \"react\";\r\nimport { Document, Page, Outline } from \"react-pdf\";\r\nimport resume from \"./Resume.pdf\";\r\nimport { pdfjs } from \"react-pdf\";\r\nimport throttle from \"lodash.throttle\";\r\nimport { Dialog, Divider, DialogContent, IconButton } from \"@material-ui/core\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${\r\n  pdfjs.version\r\n}/pdf.worker.js`;\r\n\r\nconst dialogPDFWidthMapping = {\r\n  sm: 0.32,\r\n  md: 0.53,\r\n  lg: 0.71,\r\n  xl: 1\r\n};\r\n\r\nclass ResumeDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!this.props.dialogSize) {\r\n      console.error(\"You must pass in prop 'dialogSize'!\");\r\n    }\r\n    if (!dialogPDFWidthMapping[this.props.dialogSize]) {\r\n      console.error(\r\n        \"Invalid dialog size. Here is the mapping object: \",\r\n        dialogPDFWidthMapping\r\n      );\r\n    }\r\n\r\n    this.state = { width: null, dialogOpen: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDivSize();\r\n    window.addEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  setDivSize = () => {\r\n    if (this.pdfWrapper) {\r\n      this.setState({\r\n        width:\r\n          this.pdfWrapper.getBoundingClientRect().width *\r\n          dialogPDFWidthMapping[this.props.dialogSize]\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"row\"\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100vw\",\r\n          display: \"flex\",\r\n          overflow: \"hidden\"\r\n        }}\r\n      >\r\n        <div\r\n          id=\"placeholderWrapper\"\r\n          style={{ width: \"10vw\", height: \"100vh\" }}\r\n        />\r\n        <div\r\n          id=\"pdfWrapper\"\r\n          style={{ width: \"90vw\" }}\r\n          ref={ref => (this.pdfWrapper = ref)}\r\n        >\r\n          <Dialog\r\n            open={this.state.dialogOpen}\r\n            onClose={this.props.onClose}\r\n            fullWidth={true}\r\n            maxWidth={this.props.dialogSize}\r\n          >\r\n            <DialogContent>\r\n              <Document file={resume}>\r\n                <Outline />\r\n                <Page\r\n                  pageNumber={1}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n                <Divider />\r\n                <Page\r\n                  pageNumber={2}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n              </Document>\r\n              <IconButton\r\n                onClick={this.props.onClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResumeDialog;\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { localized } from \"../../Localization\";\r\nimport ResumeDialog from \"../../resume/Resume\";\r\nimport Emoji from \"../../Emoji\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  }\r\n};\r\n\r\nclass TabMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOtherExperience: null,\r\n      otherExperienceDialogOpen: false,\r\n      resumeOpen: false\r\n    };\r\n  }\r\n\r\n  getIntro = () => {\r\n    const { summary } = localized().tabs.me;\r\n    return (\r\n      <div>\r\n        {summary.map((point, index) => {\r\n          return (\r\n            <div key={index}>\r\n              {point}\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getCurrentExperiences = () => {\r\n    const { currentExperiences } = localized().tabs.me;\r\n    return (\r\n      <List>\r\n        {currentExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOtherExperienceClick = (event, experience) => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: true,\r\n      selectedOtherExperience: experience\r\n    });\r\n  };\r\n\r\n  handleOtherExperienceDialogClose = event => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: false\r\n    });\r\n  };\r\n\r\n  getOtherExperiencesHeader = () => {\r\n    return localized().tabs.me.otherExperiencesHeader;\r\n  };\r\n\r\n  getOtherExperiences = () => {\r\n    const { otherExperiences } = localized().tabs.me;\r\n    return (\r\n      <List>\r\n        {otherExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              divider\r\n              onClick={event => {\r\n                this.handleOtherExperienceClick(event, experience);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  getOtherExperiencesPopup = () => {\r\n    if (this.state.selectedOtherExperience) {\r\n      return (\r\n        <Dialog\r\n          open={this.state.otherExperienceDialogOpen}\r\n          onClose={this.handleOtherExperienceDialogClose}\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n        >\r\n          <DialogTitle>\r\n            {this.state.selectedOtherExperience.dialogTitle}\r\n            <IconButton\r\n              onClick={this.handleOtherExperienceDialogClose}\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {this.state.selectedOtherExperience.dialogText.map((text, index) => {\r\n              return (\r\n                <div key={index} style={{ display: \"inline-flex\", marginBottom: \"10px\" }}>\r\n                  <i className=\"material-icons\">arrow_right</i>\r\n                  <DialogContentText\r\n                    style={{\r\n                      marginLeft: \"10px\",\r\n                      color: \"#363738\"\r\n                    }}\r\n                  >\r\n                    {text}\r\n                  </DialogContentText>\r\n                </div>\r\n              );\r\n            })}\r\n          </DialogContent>\r\n        </Dialog>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOpenResume = event => {\r\n    this.setState({ resumeOpen: true });\r\n  };\r\n\r\n  handleCloseResume = event => {\r\n    this.setState({ resumeOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>\r\n          {localized().greeting}\r\n          {<Emoji symbol=\"👋\" />}\r\n        </Typography>\r\n        <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n          <Button variant=\"outlined\" onClick={this.handleOpenResume}>\r\n            {localized().openResume}\r\n          </Button>\r\n        </div>\r\n\r\n        {this.state.resumeOpen && <ResumeDialog onClose={this.handleCloseResume} dialogSize=\"xl\" />}\r\n        {/* Short Intro */}\r\n        {this.getIntro()}\r\n\r\n        {/* Current Experiences */}\r\n        {this.getCurrentExperiences()}\r\n\r\n        {/* Other Experiences */}\r\n        {this.getOtherExperiencesHeader()}\r\n        {this.getOtherExperiences()}\r\n        {this.getOtherExperiencesPopup()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMe;\r\n","import React, { useState } from \"react\";\r\nimport { localized } from \"../../Localization\";\r\nimport { Typography, Tab, Tabs } from \"@material-ui/core\";\r\nimport Emoji from \"../../Emoji\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst styles = {\r\n  interestsRoot: {\r\n    padding: \"1%\",\r\n    overflow: \"hidden\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paper: {\r\n    margin: \"1% 2%\",\r\n    padding: \"2%\"\r\n  },\r\n\r\n  slideTimeout: {\r\n    enter: 500\r\n  }\r\n};\r\n\r\nconst TabInterests = props => {\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n\r\n  const handleTabChange = (event, value) => {\r\n    setCurrentTab(value);\r\n  };\r\n\r\n  const getInterests = () => {\r\n    return localized().tabs.interests;\r\n  };\r\n\r\n  const renderInterests = () => {\r\n    return (\r\n      <Paper style={styles.interestsRoot} elevation={2}>\r\n        <Tabs value={currentTab} onChange={handleTabChange} centered>\r\n          {getInterests().content.map((item, index) => {\r\n            return (\r\n              <Tab\r\n                key={index}\r\n                label={<span>{item.summary}</span>}\r\n                icon={<i className=\"material-icons\">{item.icon}</i>}\r\n              >\r\n              </Tab>\r\n            );\r\n          })}\r\n        </Tabs>\r\n        {getInterests().content.map((item, index) => {\r\n          return (\r\n            <Slide\r\n              key={index}\r\n              direction=\"left\"\r\n              in={currentTab === index}\r\n              exit={false}\r\n              timeout={styles.slideTimeout}\r\n              unmountOnExit\r\n            >\r\n              <Paper elevation={2} style={styles.paper}>\r\n                {item.details}\r\n              </Paper>\r\n            </Slide>\r\n          );\r\n        })}\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={styles.root}>\r\n      {/* Header */}\r\n      <Typography style={styles.header}>{localized().tabs.interests.header}</Typography>\r\n\r\n      {/* Sub-header */}\r\n      <Typography style={styles.subheader}>\r\n        {localized().tabs.interests.subheader}\r\n        {<Emoji symbol=\"😄\" />}\r\n      </Typography>\r\n      <br />\r\n\r\n      {/* Interest Overview */}\r\n      {renderInterests()}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabInterests;\r\n","import React from \"react\";\r\n\r\n// External Package Imports\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n// Local Imports\r\nimport { GetRootTabRouterPath } from \"../Constants\";\r\nimport TabMe from \"./me/TabMe\";\r\nimport TabInterests from \"./interests/TabInterests\";\r\n\r\nconst TabRouteRendering = props => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={GetRootTabRouterPath(\"me\")} render={() => <TabMe />} />\r\n      <Route exact path={GetRootTabRouterPath(\"projects\")} render={() => <div />} />\r\n      <Route exact path={GetRootTabRouterPath(\"interests\")} render={() => <TabInterests />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default TabRouteRendering;\r\n","import React from \"react\";\n\n// External Package Imports\nimport { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { AppBar, Typography, Tooltip, Button } from \"@material-ui/core\";\nimport { Route, useHistory, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Local Imports\nimport { DEFAULT_LANGUAGE, SUPPORTED_LANGUAGES } from \"./Constants\";\nimport { EMAIL } from \"./Info\";\nimport { getCurrentYear } from \"./Utils\";\nimport { localized, getLanguage, setLanguage } from \"./Localization\";\nimport getJapanFlagSVG, { getCanadianFlagSVG } from \"./Flags\";\nimport ReadOnlyCopyField from \"./ReadOnlyCopyField\";\nimport TabNavigation from \"./tabs/TabNavigation\";\nimport TabRouteRendering from \"./tabs/TabRouteRendering\";\n\ntoast.configure();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  appBar: {\n    marginBottom: \"20px\"\n  },\n\n  title: {\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n\n  footer: {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    margin: \"10px\",\n    align: \"center\"\n  },\n\n  svgButton: {\n    position: \"fixed\",\n    margin: \"5px\",\n    zIndex: 10,\n    bottom: theme.spacing(1),\n    right: theme.spacing(1)\n  }\n}));\n\nconst App = props => {\n  const classes = useStyles(props);\n  let history = useHistory();\n  let location = useLocation();\n\n  const changeLanguage = (language, reset = false) => {\n    // early exit\n    const currentLanguage = getLanguage();\n    console.log(\"Changing language: \", currentLanguage, \"->\", language);\n    if (currentLanguage === language) {\n      return;\n    }\n\n    // Set the language for localization module\n    setLanguage(language);\n\n    // Replace the language part of the path and push new history\n    let splitURL = location.pathname.split(\"/\");\n    splitURL[1] = language;\n    if (reset) {\n      splitURL = splitURL.slice(0, 2);\n    }\n    const toPush = splitURL.join(\"/\");\n    if (location !== splitURL.join(\"/\")) {\n      history.push(splitURL.join(\"/\"));\n      console.log(\"Pushed to history:\", toPush);\n    } else {\n      console.log(\"Skipped redundant history.push:\", toPush);\n    }\n  };\n\n  const getDynamicTitleSize = () => {\n    if (getLanguage() === \"jp\") {\n      return {\n        fontSize: \"40px\"\n      };\n    }\n    return {\n      fontSize: \"50px\"\n    };\n  };\n\n  const getLocalizedName = () => {\n    return `${localized().nameFirst}${localized().nameSeperator}${localized().nameLast}`;\n  };\n\n  // Only on initialization, will we check the user-entered URL and make sure it is valid\n  // - this is mostly for checking the entered language and redirecting otherwise\n  useEffect(() => {\n    const splitURL = location.pathname.split(\"/\");\n    const locationLang = splitURL[1]; // by our own definition we have the language first in the URL path\n    if (getLanguage() !== locationLang) {\n      // Reset to the main DEFAULT_LANGUAGE if it is not in the list of supported languages\n      if (!SUPPORTED_LANGUAGES.find(supportedLang => locationLang === supportedLang)) {\n        // Always redirect to english part if unexpected URL.\n        // 予想以外のURLがあれば、いつも英語の方にリダイレクトする\n        console.log(\"Changing language, NOT found in SUPPORTED_LANGUAGES -> to default.\");\n        changeLanguage(DEFAULT_LANGUAGE, true);\n      }\n      // otherwise, change the language to the one in the URL, keeping the remaining path as well (aka, no reset flag)\n      else {\n        console.log(\"Changing language, found in SUPPORTED_LANGUAGES.\");\n        changeLanguage(locationLang);\n      }\n    }\n  });\n\n  let switchLanguageTo = getLanguage() === \"jp\" ? \"en\" : \"jp\";\n  let switchLanguageToFlag = switchLanguageTo === \"jp\" ? getJapanFlagSVG() : getCanadianFlagSVG();\n\n  return (\n    <div className={classes.root}>\n      {localized() !== undefined && getLanguage !== undefined && (\n        <div>\n          <Route\n            path=\"/:lang\"\n            render={({ location }) => (\n              <React.Fragment>\n                <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n                  {/* TODO: make a \"supported languages\" module to reduce this code */}\n\n                  <Tooltip title={`Change the language to ${switchLanguageTo}`}>\n                    <div className={classes.svgButton}>\n                      <Button\n                        onClick={event => {\n                          changeLanguage(switchLanguageTo);\n                        }}\n                      >\n                        {switchLanguageToFlag}\n                      </Button>\n                    </div>\n                  </Tooltip>\n                  <Typography className={classes.title} style={getDynamicTitleSize()} variant=\"h2\">\n                    {getLocalizedName()}\n                  </Typography>\n                  <ReadOnlyCopyField text={EMAIL} />\n\n                  {/* Controls the navigation of the main tabs. */}\n                  <TabNavigation pathname={location.pathname} />\n                </AppBar>\n\n                {/* Renders the appropriate main tab according to the current Router path. */}\n                {/* パスによって、適切なメインタブを表現するコンポーネント */}\n                <TabRouteRendering />\n\n                {/* Footer with basic information. */}\n                {/* 基本情報があるフッター */}\n                <AppBar position=\"static\" color=\"default\">\n                  <Typography className={classes.footer}>\n                    © {getCurrentYear()} {getLocalizedName()}\n                  </Typography>\n                </AppBar>\n              </React.Fragment>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport default function getJapanFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 100 50\"\r\n    >\r\n      <rect fill=\"#000\" height=\"50\" width=\"100\" />\r\n      <rect fill=\"#fff\" height=\"46\" width=\"96\" x=\"2\" y=\"2\" />\r\n      <circle fill=\"#bc002d\" cx=\"50\" cy=\"25\" r=\"12.5\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function getCanadianFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 9600 4800\"\r\n    >\r\n      <path\r\n        fill=\"#d52b1e\"\r\n        d=\"m0 0h2400l99 99h4602l99-99h2400v4800h-2400l-99-99h-4602l-99 99H0z\"\r\n      />\r\n      <path\r\n        fill=\"#fff\"\r\n        d=\"m2400 0h4800v4800h-4800zm2490 4430-45-863a95 95 0 0 1 111-98l859 151-116-320a65 65 0 0 1 20-73l941-762-212-99a65 65 0 0 1-34-79l186-572-542 115a65 65 0 0 1-73-38l-105-247-423 454a65 65 0 0 1-111-57l204-1052-327 189a65 65 0 0 1-91-27l-332-652-332 652a65 65 0 0 1-91 27l-327-189 204 1052a65 65 0 0 1-111 57l-423-454-105 247a65 65 0 0 1-73 38l-542-115 186 572a65 65 0 0 1-34 79l-212 99 941 762a65 65 0 0 1 20 73l-116 320 859-151a95 95 0 0 1 111 98l-45 863z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: \"1em\"\n      }\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;"],"sourceRoot":""}