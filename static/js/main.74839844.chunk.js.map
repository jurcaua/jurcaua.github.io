{"version":3,"sources":["resume/resume.pdf","Info.js","Utils.js","Emoji.js","Localization.js","resume/Resume.js","tabs/me/TabMe.js","ReadOnlyCopyField.js","tabs/interests/TabInterests.js","App.js","Flags.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["module","exports","__webpack_require__","p","BIRTHDAY","Date","JAPANESE_STARTED_LEARNING","msInMonth","msInYear","getYearsAgo","date","from","arguments","length","undefined","Math","floor","getTime","Emoji","props","react_default","a","createElement","className","role","aria-label","label","aria-hidden","symbol","styles","root","marginLeft","marginRight","header","fontSize","textAlign","align","subheader","paragraph","drawerSummary","strings","LocalizedStrings","en","nameFirst","nameSeperator","nameLast","greeting","openResume","tabs","me","tooltip","projects","interests","content","summary","details","Fragment","index_es","style","years","months","getMonthsAgo","yearsString","concat","monthsString","getTimeLearningJapaneseString","icon","src_Emoji","copyConfirmNotification","currentExperiences","primary","secondary","otherExperiences","dialogTitle","dialogText","jp","pdfjs","GlobalWorkerOptions","workerSrc","version","dialogPDFWidthMapping","sm","md","lg","xl","ResumeDialog","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setDivSize","pdfWrapper","setState","width","getBoundingClientRect","dialogSize","console","error","state","dialogOpen","window","addEventListener","throttle","removeEventListener","_this2","id","height","display","overflow","ref","open","onClose","fullWidth","maxWidth","entry","file","resume","pageNumber","renderTextLayer","onClick","position","right","top","Component","TabMe","calculateAge","ageDifMs","now","ageDate","abs","getUTCFullYear","getCurrentExperiences","map","experience","index","key","handleOtherExperienceClick","event","otherExperienceDialogOpen","selectedOtherExperience","handleOtherExperienceDialogClose","getOtherExperiences","button","divider","handleOpenResume","resumeOpen","handleCloseResume","Typography_default","marginBottom","variant","Resume","text","color","inline","marginTop","ReadOnlyCopyField","emailRef","getCopyButton","document","queryCommandSupported","InputAdornment_default","IconButton_default","copyToClipboard","Icon_default","e","select","execCommand","target","focus","toast","isActive","copyToastId","newToastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","TextField_default","value","inputRef","textArea","InputProps","endAdornment","readOnly","paper","zIndex","slideTimeout","enter","TabInterests","getInterests","getInterestContent","handleHoverOverInterest","currentHoverInterest","renderInterests","item","expanded","backgroundColor","onMouseEnter","bind","assertThisInitialized","noWrap","Slide_default","direction","in","exit","timeout","Paper_default","elevation","margin","float","configure","flexGrow","appBar","title","footer","svgButton","CloneProps","children","objectWithoutProperties","App","handleChange","currentTab","changeLanguage","language","setLanguage","AppBar_default","getLanguage","xmlns","viewBox","fill","x","y","cx","cy","r","d","src_ReadOnlyCopyField","Tabs_default","onChange","centered","tabProps","placement","Tab_default","assign","disabled","me_TabMe","interests_TabInterests","getFullYear","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.74839844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.2fc38e7b.pdf\";","export const EMAIL = \"jurcaua@gmail.com\";\r\nexport const BIRTHDAY = new Date(1997, 8, 25);\r\nexport const JAPANESE_STARTED_LEARNING = new Date(2017, 7, 21);\r\n","let msInDay = 24 * 60 * 60 * 1000;\r\nlet msInMonth = 30 * 24 * 60 * 60 * 1000;\r\nlet msInYear = 365 * 24 * 60 * 60 * 1000;\r\n\r\nexport function getCurrentYear() {\r\n  return new Date().getFullYear();\r\n}\r\n\r\nexport function getYearsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInYear);\r\n}\r\n\r\nexport function getMonthsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInMonth);\r\n}\r\n\r\nexport function getDaysAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInDay);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Emoji = props => (\r\n  <span\r\n    className=\"emoji\"\r\n    role=\"img\"\r\n    aria-label={props.label ? props.label : \"\"}\r\n    aria-hidden={props.label ? \"false\" : \"true\"}\r\n  >\r\n    {props.symbol}\r\n  </span>\r\n);\r\n\r\nexport default Emoji;\r\n","import React from \"react\";\r\nimport LocalizedStrings from \"react-localization\";\r\nimport { getYearsAgo, getMonthsAgo } from \"./Utils\";\r\nimport { JAPANESE_STARTED_LEARNING } from \"./Info\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Emoji from \"./Emoji\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  },\r\n\r\n  drawerSummary: {\r\n    fontSize: \"22px\",\r\n    marginLeft: \"10px\"\r\n  }\r\n};\r\n\r\nfunction getTimeLearningJapaneseString() {\r\n  const years = getYearsAgo(JAPANESE_STARTED_LEARNING);\r\n  const months = getMonthsAgo(JAPANESE_STARTED_LEARNING) - years * 12;\r\n\r\n  let yearsString = `${years} year${years == 1 ? \"\" : \"s\"}`;\r\n  let monthsString = `${months} month${months == 1 ? \"\" : \"s\"}`;\r\n  return `${yearsString} and ${monthsString}`;\r\n}\r\n\r\nexport const strings = new LocalizedStrings({\r\n  en: {\r\n    nameFirst: \"Alexander\",\r\n    nameSeperator: \" \",\r\n    nameLast: \"Jurcau\",\r\n    greeting: \"Hello there! I'm Alex.\",\r\n    openResume: \"View My Resume!\",\r\n    tabs: {\r\n      me: {\r\n        label: \"Me\",\r\n        tooltip: \"Qualification overview.\"\r\n      },\r\n      projects: {\r\n        label: \"Projects\",\r\n        tooltip: \"Notable projects and experience.\"\r\n      },\r\n      interests: {\r\n        label: \"Interests\",\r\n        tooltip: \"Things I like.\",\r\n        header: \"Welcome to my world!\",\r\n        content: [\r\n          {\r\n            summary: \"Japanese Language\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I have been learning Japanese for about{\" \"}\r\n                  {<b>{getTimeLearningJapaneseString()}</b>}. I currently hold a{\" \"}\r\n                  {<b>JLPT N5</b>} certification I recieved Dec. 2017 and will\r\n                  be attempting the <b>N3</b> level this coming Decemeber 2019.\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I can have a casual conversation with few issues, and can keep\r\n                  up with native speaking patterns and colloquial speech.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"Gaming\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>My love for programming came from games!</b> I started out\r\n                playing Flash and CD-ROM games as kid, moving on to classic\r\n                games like Pokemon, Spyro, and my all-time favourite video game\r\n                series, Kingdom Hearts! Now I enjoy making games as much as I\r\n                enjoy playing them (something my kid-self would've never\r\n                believed )!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          },\r\n          {\r\n            summary: \"Basketball\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                I played basketball at a <b>competitive level</b> for majority\r\n                of my life, leading up to university. Playing on countless teams\r\n                and in countless leagues, and being trained by veterans in the\r\n                game -- it built a certain <u>hardwork</u> and{\" \"}\r\n                <u>team-centered</u> mindset that sticks with me to this day.\r\n              </Typography>\r\n            ),\r\n            icon: \"fitness_center\"\r\n          },\r\n          {\r\n            summary: \"Coffee\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I absolutely <i>ADORE</i> a good cup of{\" \"}\r\n                  {<Emoji symbol=\"☕\" />}. While I rarely feel the effects of\r\n                  caffeine, I stick with it for the taste!\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I believe a nice cup of black coffee is the best thing to sip\r\n                  on while programming.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"free_breakfast\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    copyConfirmNotification: \"Copied to clipboard!\",\r\n    currentExperiences: [\r\n      {\r\n        primary:\r\n          \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n        secondary: \"Python / C#\",\r\n        icon: \"code\"\r\n      },\r\n      {\r\n        primary: \"Maintaining our automated integration-testing pipeline\",\r\n        secondary: \"C++\",\r\n        icon: \"code\"\r\n      },\r\n      {\r\n        primary: \"Developing an online service management web tool\",\r\n        secondary: \"React / Redux\",\r\n        icon: \"code\"\r\n      }\r\n    ],\r\n    otherExperiences: [\r\n      {\r\n        primary:\r\n          \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n        secondary: \"Unity\",\r\n        icon: \"videogame_asset\",\r\n        dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n        dialogText: [\r\n          \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n          \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n          \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n        ]\r\n      },\r\n      {\r\n        primary:\r\n          \"Teaching video game design to at-risk youth, following a game to completion\",\r\n        secondary: \"Construct 2\",\r\n        icon: \"school\",\r\n        dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n        dialogText: [\r\n          \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n          \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n          \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n        ]\r\n      },\r\n      {\r\n        primary:\r\n          \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n        secondary: \"SQL Server (TSQL)\",\r\n        icon: \"table_chart\",\r\n        dialogTitle: \"Inmar - Systems Support\",\r\n        dialogText: [\r\n          \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n          \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n          \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  jp: {\r\n    nameFirst: \"ジュルコ\",\r\n    nameSeperator: \"・\",\r\n    nameLast: \"アレックス\",\r\n    greeting: \"こんにちは！アレックスです。\",\r\n    openResume: \"履歴書\",\r\n    tabs: {\r\n      me: {\r\n        label: \"私について\",\r\n        tooltip: \"資格概要\"\r\n      },\r\n      projects: {\r\n        label: \"プロジェクト\",\r\n        tooltip: \"最高の作ったプロジェクト\"\r\n      },\r\n      interests: {\r\n        label: \"興味\",\r\n        tooltip: \"好きなこと\",\r\n        header: \"私の世界へ、ようこそ！\",\r\n        content: []\r\n      }\r\n    },\r\n    copyConfirmNotification: \"コーピした!\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Document, Page, Outline } from \"react-pdf\";\r\nimport resume from \"./resume.pdf\";\r\nimport { pdfjs } from \"react-pdf\";\r\nimport throttle from \"lodash.throttle\";\r\nimport { Dialog, Divider, DialogContent, IconButton } from \"@material-ui/core\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${\r\n  pdfjs.version\r\n}/pdf.worker.js`;\r\n\r\nconst dialogPDFWidthMapping = {\r\n  sm: 0.45,\r\n  md: 0.74,\r\n  lg: 1,\r\n  xl: 1\r\n};\r\n\r\nclass ResumeDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!this.props.dialogSize) {\r\n      console.error(\"You must pass in prop 'dialogSize'!\");\r\n    }\r\n    if (!dialogPDFWidthMapping[this.props.dialogSize]) {\r\n      console.error(\r\n        \"Invalid dialog size. Here is the mapping object: \",\r\n        dialogPDFWidthMapping\r\n      );\r\n    }\r\n\r\n    this.state = { width: null, dialogOpen: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDivSize();\r\n    window.addEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  setDivSize = () => {\r\n    if (this.pdfWrapper) {\r\n      this.setState({\r\n        width:\r\n          this.pdfWrapper.getBoundingClientRect().width *\r\n          dialogPDFWidthMapping[this.props.dialogSize]\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"row\"\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100vw\",\r\n          display: \"flex\",\r\n          overflow: \"hidden\"\r\n        }}\r\n      >\r\n        <div\r\n          id=\"placeholderWrapper\"\r\n          style={{ width: \"10vw\", height: \"100vh\" }}\r\n        />\r\n        <div\r\n          id=\"pdfWrapper\"\r\n          style={{ width: \"90vw\" }}\r\n          ref={ref => (this.pdfWrapper = ref)}\r\n        >\r\n          <Dialog\r\n            open={this.state.dialogOpen}\r\n            onClose={this.props.onClose}\r\n            fullWidth={true}\r\n            maxWidth={this.props.dialogSize}\r\n          >\r\n            <DialogContent>\r\n              <Document file={resume}>\r\n                <Outline />\r\n                <Page\r\n                  pageNumber={1}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n                <Divider />\r\n                <Page\r\n                  pageNumber={2}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n              </Document>\r\n              <IconButton\r\n                onClick={this.props.onClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResumeDialog;\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { BIRTHDAY } from \"../../Info\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { strings } from \"../../Localization\";\r\nimport ResumeDialog from \"../../resume/Resume\";\r\nimport Emoji from \"../../Emoji\";\r\nimport { getYearsAgo, getMonthsAgo, getDaysAgo } from \"../../Utils\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  }\r\n};\r\n\r\nclass TabMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOtherExperience: null,\r\n      otherExperienceDialogOpen: false,\r\n      resumeOpen: false\r\n    };\r\n  }\r\n\r\n  calculateAge = () => {\r\n    var ageDifMs = Date.now() - BIRTHDAY.getTime();\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  };\r\n\r\n  getCurrentExperiences = () => {\r\n    const { currentExperiences } = strings;\r\n    return (\r\n      <List>\r\n        {currentExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOtherExperienceClick = (event, experience) => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: true,\r\n      selectedOtherExperience: experience\r\n    });\r\n  };\r\n\r\n  handleOtherExperienceDialogClose = event => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: false\r\n    });\r\n  };\r\n\r\n  getOtherExperiences = () => {\r\n    const { otherExperiences } = strings;\r\n    return (\r\n      <List>\r\n        {otherExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              divider\r\n              onClick={event => {\r\n                this.handleOtherExperienceClick(event, experience);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOpenResume = event => {\r\n    this.setState({ resumeOpen: true });\r\n  };\r\n\r\n  handleCloseResume = event => {\r\n    this.setState({ resumeOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>\r\n          {strings.greeting}\r\n          {<Emoji symbol=\"👋\" />}\r\n        </Typography>\r\n        <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n          <Button variant=\"outlined\" onClick={this.handleOpenResume}>\r\n            {strings.openResume}\r\n          </Button>\r\n        </div>\r\n\r\n        {this.state.resumeOpen && (\r\n          <ResumeDialog onClose={this.handleCloseResume} dialogSize=\"md\" />\r\n        )}\r\n        {/* Short Intro */}\r\n        <Typography style={styles.paragraph}>\r\n          Currently {getYearsAgo(BIRTHDAY)} years old, and a fourth year student\r\n          at the <b>University of Toronto</b> -- studying Computer Science with\r\n          focuses in Algorithms, System Design, and Game Design.\r\n        </Typography>\r\n        <br />\r\n\r\n        {/* Current Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          I am currently doing a 15 month internship at <b>Ubisoft Toronto</b>{\" \"}\r\n          where I work on the tools team. Responsible for a variety of things,\r\n          my focuses lie in:\r\n        </Typography>\r\n        {this.getCurrentExperiences()}\r\n\r\n        {/* Other Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          Other related experience in the industry includes:\r\n        </Typography>\r\n        <List>{this.getOtherExperiences()}</List>\r\n\r\n        {this.state.selectedOtherExperience && (\r\n          <Dialog\r\n            open={this.state.otherExperienceDialogOpen}\r\n            onClose={this.handleOtherExperienceDialogClose}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n          >\r\n            <DialogTitle>\r\n              {this.state.selectedOtherExperience.dialogTitle}\r\n              <IconButton\r\n                onClick={this.handleOtherExperienceDialogClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {this.state.selectedOtherExperience.dialogText.map(text => {\r\n                return (\r\n                  <div style={{ display: \"inline-flex\", marginBottom: \"10px\" }}>\r\n                    <i className=\"material-icons\">arrow_right</i>\r\n                    <DialogContentText\r\n                      style={{\r\n                        marginLeft: \"10px\",\r\n                        color: \"#363738\"\r\n                      }}\r\n                    >\r\n                      {text}\r\n                    </DialogContentText>\r\n                  </div>\r\n                );\r\n              })}\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMe;\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { strings } from \"./Localization\";\r\n\r\nconst styles = {\r\n  inline: {\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    marginTop: \"10px\",\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  }\r\n};\r\n\r\nclass ReadOnlyCopyField extends Component {\r\n  emailRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      copyToastId: null\r\n    };\r\n  }\r\n\r\n  getCopyButton = () => {\r\n    if (document.queryCommandSupported(\"copy\")) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton style={styles.inline} onClick={this.copyToClipboard}>\r\n            <Icon style={{ fontSize: \"20px\" }}>file_copy</Icon>\r\n          </IconButton>\r\n        </InputAdornment>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  copyToClipboard = e => {\r\n    this.emailRef.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n\r\n    if (!toast.isActive(this.state.copyToastId)) {\r\n      let newToastId = toast(strings.copyConfirmNotification, {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true\r\n      });\r\n      this.setState({\r\n        copyToastId: newToastId\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        <TextField\r\n          style={styles.text}\r\n          variant=\"outlined\"\r\n          value={text}\r\n          inputRef={textArea => (this.emailRef = textArea)}\r\n          InputProps={{\r\n            endAdornment: this.getCopyButton(),\r\n            style: { fontSize: 15 },\r\n            readOnly: true\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadOnlyCopyField;\r\n","import React, { Component } from \"react\";\r\nimport { strings } from \"../../Localization\";\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary\r\n} from \"@material-ui/core\";\r\nimport Emoji from \"../../Emoji\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  },\r\n\r\n  drawerSummary: {\r\n    fontSize: \"22px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n\r\n  paper: {\r\n    zIndex: 1,\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\",\r\n    width: \"100%\"\r\n  },\r\n\r\n  slideTimeout: {\r\n    enter: 500\r\n  }\r\n};\r\n\r\nclass TabInterests extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentHoverInterest: null\r\n    };\r\n  }\r\n\r\n  getInterests = () => {\r\n    return strings.tabs.interests;\r\n  };\r\n\r\n  getInterestContent = index => {\r\n    return this.getInterests().content[index];\r\n  };\r\n\r\n  handleHoverOverInterest = index => {\r\n    this.setState({ currentHoverInterest: index });\r\n  };\r\n\r\n  renderInterests = () => {\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <div>\r\n          {this.getInterests().content.map((item, index) => {\r\n            return (\r\n              <ExpansionPanel\r\n                key={index}\r\n                expanded={false}\r\n                style={{\r\n                  backgroundColor:\r\n                    this.state.currentHoverInterest === index ? \"#eeeeee\" : \"\"\r\n                }}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  key={index}\r\n                  onMouseEnter={this.handleHoverOverInterest.bind(this, index)}\r\n                >\r\n                  <i className=\"material-icons\">arrow_right</i>\r\n                  <i className=\"material-icons\">{item.icon}</i>\r\n                  <Typography style={styles.drawerSummary} noWrap>\r\n                    {item.summary}\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          {this.state.currentHoverInterest === null && (\r\n            <Slide\r\n              direction=\"left\"\r\n              in={this.state.currentHoverInterest === null}\r\n              exit={false}\r\n              timeout={styles.slideTimeout}\r\n            >\r\n              <Paper elevation={4} style={styles.paper}>\r\n                <div style={{ margin: \"10px\" }}>\r\n                  <i className=\"material-icons\" style={{ float: \"left\" }}>\r\n                    arrow_left\r\n                  </i>\r\n                  <i className=\"material-icons\" style={{ float: \"left\" }}>\r\n                    touch_app\r\n                  </i>\r\n                  <Typography style={styles.paragraph} noWrap>\r\n                    {\" \"}\r\n                    Hover over one of my interests!\r\n                  </Typography>\r\n                </div>\r\n              </Paper>\r\n            </Slide>\r\n          )}\r\n          {this.getInterests().content.map((item, index) => {\r\n            if (this.state.currentHoverInterest === index) {\r\n              return (\r\n                <Slide\r\n                  direction=\"left\"\r\n                  in={this.state.currentHoverInterest === index}\r\n                  exit={false}\r\n                  timeout={styles.slideTimeout}\r\n                >\r\n                  <Paper elevation={4} style={styles.paper}>\r\n                    <div style={{ margin: \"10px\" }}>{item.details}</div>\r\n                  </Paper>\r\n                </Slide>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>\r\n          {strings.tabs.interests.header}\r\n        </Typography>\r\n\r\n        {/* Sub-header */}\r\n        <Typography style={styles.subheader}>\r\n          I also do a couple more things outside of work!\r\n          {<Emoji symbol=\"😄\" />}\r\n        </Typography>\r\n        <br />\r\n\r\n        {/* Interest Overview */}\r\n        {this.renderInterests()}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabInterests;\r\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Tooltip, Button } from \"@material-ui/core\";\nimport TabMe from \"./tabs/me/TabMe\";\nimport ReadOnlyCopyField from \"./ReadOnlyCopyField\";\nimport { EMAIL } from \"./Info\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport getJapanFlagSVG, { getCanadianFlagSVG } from \"./Flags\";\nimport { strings } from \"./Localization\";\nimport TabInterests from \"./tabs/interests/TabInterests\";\nimport { getCurrentYear } from \"./Utils\";\n\ntoast.configure();\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  appBar: {\n    marginBottom: \"20px\"\n  },\n\n  title: {\n    fontSize: \"50px\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n\n  footer: {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    margin: \"10px\",\n    align: \"center\"\n  },\n\n  svgButton: {\n    position: \"absolute\",\n    margin: \"5px\"\n  }\n};\n\n// This workaround is for this issue: https://github.com/mui-org/material-ui/issues/12597\nfunction CloneProps(props) {\n  const { children, ...other } = props;\n  return children(other);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ currentTab: value });\n  };\n\n  changeLanguage = (event, language) => {\n    strings.setLanguage(language);\n    this.setState({}); // force the state to refresh -> localization updates after setting language\n  };\n\n  render() {\n    const { currentTab } = this.state;\n\n    return (\n      <div className={styles.root}>\n        <AppBar position=\"static\" color=\"default\" style={styles.appBar}>\n          {/* TODO: make a \"supported languages\" module to reduce this code */}\n          {strings.getLanguage() !== \"jp\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"jp\");\n                }}\n              >\n                {getJapanFlagSVG()}\n              </Button>\n            </div>\n          )}\n          {strings.getLanguage() !== \"en\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"en\");\n                }}\n              >\n                {getCanadianFlagSVG()}\n              </Button>\n            </div>\n          )}\n          <Typography style={styles.title} variant=\"h2\">\n            {strings.nameFirst}\n            {strings.nameSeperator}\n            {strings.nameLast}\n          </Typography>\n          <ReadOnlyCopyField text={EMAIL} />\n\n          {/* TODO: Put icon in the localization module for en (and can be overriden for other lang), \n          then make tabs based on localization strings*/}\n          <Tabs value={currentTab} onChange={this.handleChange} centered>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip title={strings.tabs.me.tooltip} placement=\"bottom\">\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      label={<span>{strings.tabs.me.label}</span>}\n                      icon={<i className=\"material-icons\">face</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={strings.tabs.projects.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      disabled\n                      label={<span>{strings.tabs.projects.label}</span>}\n                      icon={<i className=\"material-icons\">laptop_mac</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={strings.tabs.interests.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      label={<span>{strings.tabs.interests.label}</span>}\n                      icon={<i className=\"material-icons\">favorite_border</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n          </Tabs>\n        </AppBar>\n        {currentTab === 0 && <TabMe />}\n        {currentTab === 1 && <div />}\n        {currentTab === 2 && <TabInterests />}\n\n        <AppBar position=\"static\" color=\"default\">\n          <Typography style={styles.footer}>\n            © {getCurrentYear()} Alexander Jurcau\n          </Typography>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport default function getJapanFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 100 50\"\r\n    >\r\n      <rect fill=\"#000\" height=\"50\" width=\"100\" />\r\n      <rect fill=\"#fff\" height=\"46\" width=\"96\" x=\"2\" y=\"2\" />\r\n      <circle fill=\"#bc002d\" cx=\"50\" cy=\"25\" r=\"12.5\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function getCanadianFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 9600 4800\"\r\n    >\r\n      <path\r\n        fill=\"#d52b1e\"\r\n        d=\"m0 0h2400l99 99h4602l99-99h2400v4800h-2400l-99-99h-4602l-99 99H0z\"\r\n      />\r\n      <path\r\n        fill=\"#fff\"\r\n        d=\"m2400 0h4800v4800h-4800zm2490 4430-45-863a95 95 0 0 1 111-98l859 151-116-320a65 65 0 0 1 20-73l941-762-212-99a65 65 0 0 1-34-79l186-572-542 115a65 65 0 0 1-73-38l-105-247-423 454a65 65 0 0 1-111-57l204-1052-327 189a65 65 0 0 1-91-27l-332-652-332 652a65 65 0 0 1-91 27l-327-189 204 1052a65 65 0 0 1-111 57l-423-454-105 247a65 65 0 0 1-73 38l-542-115 186 572a65 65 0 0 1-34 79l-212 99 941 762a65 65 0 0 1 20 73l-116 320 859-151a95 95 0 0 1 111 98l-45 863z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;"],"sourceRoot":""}