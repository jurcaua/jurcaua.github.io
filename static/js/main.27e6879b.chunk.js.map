{"version":3,"sources":["resume/Resume.pdf","Utils.js","Info.js","Emoji.js","Localization.js","resume/Resume.js","tabs/me/TabMe.js","ReadOnlyCopyField.js","tabs/interests/TabInterests.js","App.js","Flags.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["module","exports","__webpack_require__","p","msInMonth","msInYear","getYearsAgo","date","from","arguments","length","undefined","Date","Math","floor","getTime","BIRTHDAY","JAPANESE_STARTED_LEARNING","Emoji","props","react_default","a","createElement","className","role","aria-label","label","aria-hidden","symbol","styles","root","marginLeft","marginRight","header","fontSize","textAlign","align","subheader","paragraph","drawerSummary","currentLanguage","basicStrings","en","time","year","years","month","months","connector","space","jp","strings","nameFirst","nameSeperator","nameLast","greeting","openResume","copyConfirmNotification","tabs","me","tooltip","summary","index_es","style","currentExperiences","primary","secondary","icon","otherExperiencesHeader","otherExperiences","dialogTitle","dialogText","projects","interests","content","details","Fragment","getTimeLearningJapaneseString","src_Emoji","getLanguage","localized","lang","getMonthsAgo","yearsString","concat","monthsString","pdfjs","GlobalWorkerOptions","workerSrc","version","dialogPDFWidthMapping","sm","md","lg","xl","ResumeDialog","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setDivSize","pdfWrapper","setState","width","getBoundingClientRect","dialogSize","console","error","state","dialogOpen","window","addEventListener","throttle","removeEventListener","_this2","id","height","display","overflow","ref","open","onClose","fullWidth","maxWidth","entry","file","resume","pageNumber","renderTextLayer","onClick","position","right","top","Component","TabMe","getIntro","map","point","index","key","getCurrentExperiences","experience","handleOtherExperienceClick","event","otherExperienceDialogOpen","selectedOtherExperience","handleOtherExperienceDialogClose","getOtherExperiencesHeader","getOtherExperiences","button","divider","getOtherExperiencesPopup","text","marginBottom","color","handleOpenResume","resumeOpen","handleCloseResume","Typography_default","variant","resume_Resume","inline","marginTop","ReadOnlyCopyField","emailRef","getCopyButton","document","queryCommandSupported","InputAdornment_default","IconButton_default","copyToClipboard","Icon_default","e","select","execCommand","target","focus","toast","isActive","copyToastId","newToastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","TextField_default","value","inputRef","textArea","InputProps","endAdornment","readOnly","paper","zIndex","slideTimeout","enter","TabInterests","getInterests","getInterestContent","handleHoverOverInterest","currentHoverInterest","renderInterests","item","expanded","backgroundColor","onMouseEnter","bind","assertThisInitialized","noWrap","Slide_default","direction","in","exit","timeout","Paper_default","elevation","margin","float","configure","flexGrow","appBar","title","footer","svgButton","CloneProps","children","objectWithoutProperties","App","handleChange","currentTab","changeLanguage","language","AppBar_default","xmlns","viewBox","fill","x","y","cx","cy","r","d","src_ReadOnlyCopyField","Tabs_default","onChange","centered","tabProps","placement","Tab_default","assign","disabled","me_TabMe","interests_TabInterests","getFullYear","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.27e6879b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.2fc38e7b.pdf\";","let msInDay = 24 * 60 * 60 * 1000;\r\nlet msInMonth = 30 * 24 * 60 * 60 * 1000;\r\nlet msInYear = 365 * 24 * 60 * 60 * 1000;\r\n\r\nexport function getCurrentYear() {\r\n  return new Date().getFullYear();\r\n}\r\n\r\nexport function getYearsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInYear);\r\n}\r\n\r\nexport function getMonthsAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInMonth);\r\n}\r\n\r\nexport function getDaysAgo(date, from = new Date()) {\r\n  return Math.floor((from.getTime() - date.getTime()) / msInDay);\r\n}\r\n","export const EMAIL = \"jurcaua@gmail.com\";\r\nexport const BIRTHDAY = new Date(1997, 8, 25);\r\nexport const JAPANESE_STARTED_LEARNING = new Date(2017, 7, 21);\r\n","import React from \"react\";\r\n\r\nconst Emoji = props => (\r\n  <span\r\n    className=\"emoji\"\r\n    role=\"img\"\r\n    aria-label={props.label ? props.label : \"\"}\r\n    aria-hidden={props.label ? \"false\" : \"true\"}\r\n  >\r\n    {props.symbol}\r\n  </span>\r\n);\r\n\r\nexport default Emoji;\r\n","import React from \"react\";\r\nimport { getYearsAgo, getMonthsAgo } from \"./Utils\";\r\nimport { BIRTHDAY, JAPANESE_STARTED_LEARNING } from \"./Info\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Emoji from \"./Emoji\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  },\r\n\r\n  drawerSummary: {\r\n    fontSize: \"22px\",\r\n    marginLeft: \"10px\"\r\n  }\r\n};\r\n\r\nvar currentLanguage = \"en\";\r\n\r\nconst basicStrings = {\r\n  en: {\r\n    time: {\r\n      year: \"year\",\r\n      years: \"years\",\r\n      month: \"month\",\r\n      months: \"months\",\r\n      connector: \"and\",\r\n      space: \" \"\r\n    }\r\n  },\r\n  jp: {\r\n    time: {\r\n      year: \"年\",\r\n      years: \"年\",\r\n      month: \"月\",\r\n      months: \"月\",\r\n      connector: \"の\",\r\n      space: \"\"\r\n    }\r\n  }\r\n};\r\n\r\nexport const strings = {\r\n  en: {\r\n    nameFirst: \"Alexander\",\r\n    nameSeperator: \" \",\r\n    nameLast: \"Jurcau\",\r\n    greeting: \"Hello there! I'm Alex.\",\r\n    openResume: \"View My Resume!\",\r\n    copyConfirmNotification: \"Copied to clipboard!\",\r\n    tabs: {\r\n      me: {\r\n        label: \"Me\",\r\n        tooltip: \"Qualification overview.\",\r\n        summary: [\r\n          <Typography style={styles.paragraph}>\r\n            Currently {getYearsAgo(BIRTHDAY)} years old, and a fourth year\r\n            student at the <b>University of Toronto</b> -- studying Computer\r\n            Science with focuses in Algorithms, System Design, and Game Design.\r\n          </Typography>,\r\n          <Typography style={styles.paragraph}>\r\n            I am currently doing a 15 month internship at <b>Ubisoft Toronto</b>{\" \"}\r\n            where I work on the tools team. Responsible for a variety of things,\r\n            my focuses lie in:\r\n          </Typography>\r\n        ],\r\n        currentExperiences: [\r\n          {\r\n            primary:\r\n              \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n            secondary: \"Python / C#\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Maintaining our automated integration-testing pipeline\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Developing an online service management web tool\",\r\n            secondary: \"React / Redux\",\r\n            icon: \"code\"\r\n          }\r\n        ],\r\n        otherExperiencesHeader: (\r\n          <Typography style={styles.paragraph}>\r\n            Other related experience in the industry includes:\r\n          </Typography>\r\n        ),\r\n        otherExperiences: [\r\n          {\r\n            primary:\r\n              \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n            secondary: \"Unity\",\r\n            icon: \"videogame_asset\",\r\n            dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n            dialogText: [\r\n              \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n              \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n              \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Teaching video game design to at-risk youth, following a game to completion\",\r\n            secondary: \"Construct 2\",\r\n            icon: \"school\",\r\n            dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n            dialogText: [\r\n              \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n              \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n              \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n            secondary: \"SQL Server (TSQL)\",\r\n            icon: \"table_chart\",\r\n            dialogTitle: \"Inmar - Systems Support\",\r\n            dialogText: [\r\n              \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n              \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n              \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      projects: {\r\n        label: \"Projects\",\r\n        tooltip: \"Notable projects and experience.\"\r\n      },\r\n      interests: {\r\n        label: \"Interests\",\r\n        tooltip: \"Things I like.\",\r\n        header: \"Welcome to my world!\",\r\n        subheader: \"I also do a couple more things outside of work!\",\r\n        content: [\r\n          {\r\n            summary: \"Japanese Language\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I have been learning Japanese for about{\" \"}\r\n                  {<b>{getTimeLearningJapaneseString(\"en\")}</b>}. I currently\r\n                  hold a {<b>JLPT N5</b>} certification I received Dec. 2017 and\r\n                  will be attempting the <b>N3</b> level this coming Dec. 2019.\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I can have a casual conversation with few issues, and can keep\r\n                  up with native speaking patterns and colloquial speech.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"Gaming\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>My love for programming came from games!</b> I started out\r\n                playing Flash and CD-ROM games as kid, moving on to classic\r\n                games like Pokemon, Spyro, and my all-time favourite video game\r\n                series, Kingdom Hearts! Now I enjoy making games as much as I\r\n                enjoy playing them (something my kid-self would've never\r\n                believed)!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          },\r\n          {\r\n            summary: \"Basketball\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                I played basketball at a <b>competitive level</b> for majority\r\n                of my life, leading up to university. Playing on countless teams\r\n                and in countless leagues, and being trained by veterans in the\r\n                game -- it built a certain <u>hardwork</u> and{\" \"}\r\n                <u>team-centered</u> mindset that sticks with me to this day.\r\n              </Typography>\r\n            ),\r\n            icon: \"fitness_center\"\r\n          },\r\n          {\r\n            summary: \"Coffee\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I absolutely <i>ADORE</i> a good cup of{\" \"}\r\n                  {<Emoji symbol=\"☕\" />}. While I rarely feel the effects of\r\n                  caffeine, I stick with it for the taste!\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I believe a nice cup of black coffee is the best thing to sip\r\n                  on while programming.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"free_breakfast\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  jp: {\r\n    nameFirst: \"ジュルコ\",\r\n    nameSeperator: \"・\",\r\n    nameLast: \"アレックス\",\r\n    greeting: \"こんにちは！アレックスです。\",\r\n    openResume: \"履歴書\",\r\n    copyConfirmNotification: \"コーピした!\",\r\n    tabs: {\r\n      me: {\r\n        label: \"私について\",\r\n        tooltip: \"資格概要\",\r\n        summary: [\r\n          <Typography style={styles.paragraph}>\r\n            現在、<b>トロント大学</b>に通っている{getYearsAgo(BIRTHDAY)}\r\n            歳の四年生です。\r\n            コンピューターサイエンスのアルゴリズムやシステムデザインやゲームデザインを中心に学んでいます。\r\n          </Typography>,\r\n          <Typography style={styles.paragraph}>\r\n            今<b>Ubisoft</b>\r\n            というゲーム会社のツールチームで15ヶ月のインターンシップをしています。\r\n            私の専門は以下のとおりです。\r\n          </Typography>\r\n        ],\r\n        currentExperiences: [\r\n          {\r\n            primary:\r\n              \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n            secondary: \"Python / C#\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Maintaining our automated integration-testing pipeline\",\r\n            secondary: \"C++\",\r\n            icon: \"code\"\r\n          },\r\n          {\r\n            primary: \"Developing an online service management web tool\",\r\n            secondary: \"React / Redux\",\r\n            icon: \"code\"\r\n          }\r\n        ],\r\n        otherExperiencesHeader: (\r\n          <Typography style={styles.paragraph}>\r\n            業界に関連する経験は以下のとおりです。\r\n          </Typography>\r\n        ),\r\n        otherExperiences: [\r\n          {\r\n            primary:\r\n              \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n            secondary: \"Unity\",\r\n            icon: \"videogame_asset\",\r\n            dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n            dialogText: [\r\n              \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n              \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n              \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Teaching video game design to at-risk youth, following a game to completion\",\r\n            secondary: \"Construct 2\",\r\n            icon: \"school\",\r\n            dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n            dialogText: [\r\n              \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n              \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n              \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n            ]\r\n          },\r\n          {\r\n            primary:\r\n              \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n            secondary: \"SQL Server (TSQL)\",\r\n            icon: \"table_chart\",\r\n            dialogTitle: \"Inmar - Systems Support\",\r\n            dialogText: [\r\n              \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n              \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n              \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      projects: {\r\n        label: \"プロジェクト\",\r\n        tooltip: \"最高の作ったプロジェクト\"\r\n      },\r\n      interests: {\r\n        label: \"興味\",\r\n        tooltip: \"好きなこと\",\r\n        header: \"私の世界へ、ようこそ！\",\r\n        subheader: \"プライベートの私を紹介します！\",\r\n        content: [\r\n          {\r\n            summary: \"日本語\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  私は{<b>{getTimeLearningJapaneseString(\"jp\")}</b>}\r\n                  日本語を勉強しています。 2017年の12月に\r\n                  <b>日本語能力試験の5級</b>に合格し、今年の年末に<b>3級</b>\r\n                  に挑戦する予定です。\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  ビジネスレベルではなければ、問題なく日本語でコミュニケーションをとることが出来ます。\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>My love for programming came from games!</b> I started out\r\n                playing Flash and CD-ROM games as kid, moving on to classic\r\n                games like Pokemon, Spyro, and my all-time favourite video game\r\n                series, Kingdom Hearts! Now I enjoy making games as much as I\r\n                enjoy playing them (something my kid-self would've never\r\n                believed )!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          },\r\n          {\r\n            summary: \"バスケットボール\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                I played basketball at a <b>competitive level</b> for majority\r\n                of my life, leading up to university. Playing on countless teams\r\n                and in countless leagues, and being trained by veterans in the\r\n                game -- it built a certain <u>hardwork</u> and{\" \"}\r\n                <u>team-centered</u> mindset that sticks with me to this day.\r\n              </Typography>\r\n            ),\r\n            icon: \"fitness_center\"\r\n          },\r\n          {\r\n            summary: \"コーヒー\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  よくした{<Emoji symbol=\"☕\" />}が誠に大好きです。\r\n                  コーヒーの生の味は最高ですけれども、カフェインの効果はあまり感じないんです。\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  プログラミングする時には一番せいせいさせることはコーヒーを飲むことだと思います。\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"free_breakfast\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function getLanguage() {\r\n  return currentLanguage;\r\n}\r\n\r\nexport function setLanguage(lang) {\r\n  currentLanguage = lang;\r\n}\r\n\r\nexport function localized() {\r\n  return strings[currentLanguage];\r\n}\r\n\r\n// *Sigh* This is basically a super overcomplicated function that takes in a language and will give you\r\n// a nicely formatted string that is the amount of time ive been studying Japanese\r\n// To make it more general I had to do some ugly stuff like define what a SPACE was because, whoops cant have spaces with Japanese!!\r\n// Anyways I hope no one sees this but if so, welcome to my masterpiece.\r\nexport function getTimeLearningJapaneseString(lang) {\r\n  const years = getYearsAgo(JAPANESE_STARTED_LEARNING);\r\n  const months = getMonthsAgo(JAPANESE_STARTED_LEARNING) - years * 12;\r\n\r\n  const { space } = basicStrings[lang].time;\r\n\r\n  let yearsString = `${years}${space}${\r\n    years === 1 ? basicStrings[lang].time.year : basicStrings[lang].time.years\r\n  }`;\r\n  let monthsString = `${months}${space}${\r\n    months === 1\r\n      ? basicStrings[lang].time.month\r\n      : basicStrings[lang].time.months\r\n  }`;\r\n  return `${yearsString}${space}${\r\n    basicStrings[lang].time.connector\r\n  }${space}${monthsString}`;\r\n}\r\n\r\n/*\r\ncontent: [\r\n          { summary: \"日本語\", details: \"\" },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <div>\r\n                <Typography style={styles.paragraph}>\r\n                  最初にゲームはネットでとかしていましたが、それからポケモンやSpyroや一番の好きなゲーム、キングダムハーツをしていました！Now\r\n                  I enjoy making games as much as I enjoy playing\r\n                  them　(something my kid-self would've never believed )!\r\n                </Typography>\r\n              </div>\r\n            )\r\n          },\r\n          { summary: \"バスケットボール\", details: \"\" },\r\n          { summary: \"コーヒー\", details: \"\" }\r\n        ]\r\n\r\n\r\n{\r\n            summary: \"日本語\",\r\n            details: (\r\n              <React.Fragment>\r\n                <Typography style={styles.paragraph}>\r\n                  I have been learning Japanese for about{\" \"}\r\n                  {<b>{getTimeLearningJapaneseString()}</b>}. I currently hold a{\" \"}\r\n                  {<b>JLPT N5</b>} certification I recieved Dec. 2017 and will\r\n                  be attempting the <b>N3</b> level this coming Decemeber 2019.\r\n                </Typography>\r\n                <br />\r\n                <Typography style={styles.paragraph}>\r\n                  I can have a casual conversation with few issues, and can keep\r\n                  up with native speaking patterns and colloquial speech.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ),\r\n            icon: \"translate\"\r\n          },\r\n          {\r\n            summary: \"ゲーム\",\r\n            details: (\r\n              <Typography style={styles.paragraph}>\r\n                <b>\r\n                  プログラミングが好きということの理由は、子供頃にゲームはずっとをしていたんですから。{\" \"}\r\n                </b>\r\n                最初にゲームはネットでとかしていましたが、それからポケモンやSpyroや一番の好きなゲーム、キングダムハーツをしていました！\r\n                Now I enjoy making games as much as I enjoy playing them\r\n                (something my kid-self would've never believed )!\r\n              </Typography>\r\n            ),\r\n            icon: \"videogame_asset\"\r\n          }\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport { Document, Page, Outline } from \"react-pdf\";\r\nimport resume from \"./Resume.pdf\";\r\nimport { pdfjs } from \"react-pdf\";\r\nimport throttle from \"lodash.throttle\";\r\nimport { Dialog, Divider, DialogContent, IconButton } from \"@material-ui/core\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${\r\n  pdfjs.version\r\n}/pdf.worker.js`;\r\n\r\nconst dialogPDFWidthMapping = {\r\n  sm: 0.45,\r\n  md: 0.74,\r\n  lg: 1,\r\n  xl: 1\r\n};\r\n\r\nclass ResumeDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!this.props.dialogSize) {\r\n      console.error(\"You must pass in prop 'dialogSize'!\");\r\n    }\r\n    if (!dialogPDFWidthMapping[this.props.dialogSize]) {\r\n      console.error(\r\n        \"Invalid dialog size. Here is the mapping object: \",\r\n        dialogPDFWidthMapping\r\n      );\r\n    }\r\n\r\n    this.state = { width: null, dialogOpen: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDivSize();\r\n    window.addEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", throttle(this.setDivSize, 500));\r\n  }\r\n\r\n  setDivSize = () => {\r\n    if (this.pdfWrapper) {\r\n      this.setState({\r\n        width:\r\n          this.pdfWrapper.getBoundingClientRect().width *\r\n          dialogPDFWidthMapping[this.props.dialogSize]\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"row\"\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100vw\",\r\n          display: \"flex\",\r\n          overflow: \"hidden\"\r\n        }}\r\n      >\r\n        <div\r\n          id=\"placeholderWrapper\"\r\n          style={{ width: \"10vw\", height: \"100vh\" }}\r\n        />\r\n        <div\r\n          id=\"pdfWrapper\"\r\n          style={{ width: \"90vw\" }}\r\n          ref={ref => (this.pdfWrapper = ref)}\r\n        >\r\n          <Dialog\r\n            open={this.state.dialogOpen}\r\n            onClose={this.props.onClose}\r\n            fullWidth={true}\r\n            maxWidth={this.props.dialogSize}\r\n          >\r\n            <DialogContent>\r\n              <Document file={resume}>\r\n                <Outline />\r\n                <Page\r\n                  pageNumber={1}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n                <Divider />\r\n                <Page\r\n                  pageNumber={2}\r\n                  renderTextLayer={false}\r\n                  width={this.state.width}\r\n                />\r\n              </Document>\r\n              <IconButton\r\n                onClick={this.props.onClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResumeDialog;\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { localized } from \"../../Localization\";\r\nimport ResumeDialog from \"../../resume/Resume\";\r\nimport Emoji from \"../../Emoji\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  }\r\n};\r\n\r\nclass TabMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOtherExperience: null,\r\n      otherExperienceDialogOpen: false,\r\n      resumeOpen: false\r\n    };\r\n  }\r\n\r\n  getIntro = () => {\r\n    const { summary } = localized().tabs.me;\r\n    return (\r\n      <div>\r\n        {summary.map((point, index) => {\r\n          return (\r\n            <div key={index}>\r\n              {point}\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getCurrentExperiences = () => {\r\n    const { currentExperiences } = localized().tabs.me;\r\n    return (\r\n      <List>\r\n        {currentExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOtherExperienceClick = (event, experience) => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: true,\r\n      selectedOtherExperience: experience\r\n    });\r\n  };\r\n\r\n  handleOtherExperienceDialogClose = event => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: false\r\n    });\r\n  };\r\n\r\n  getOtherExperiencesHeader = () => {\r\n    return localized().tabs.me.otherExperiencesHeader;\r\n  };\r\n\r\n  getOtherExperiences = () => {\r\n    const { otherExperiences } = localized().tabs.me;\r\n    return (\r\n      <List>\r\n        {otherExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              divider\r\n              onClick={event => {\r\n                this.handleOtherExperienceClick(event, experience);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  getOtherExperiencesPopup = () => {\r\n    if (this.state.selectedOtherExperience) {\r\n      return (\r\n        <Dialog\r\n          open={this.state.otherExperienceDialogOpen}\r\n          onClose={this.handleOtherExperienceDialogClose}\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n        >\r\n          <DialogTitle>\r\n            {this.state.selectedOtherExperience.dialogTitle}\r\n            <IconButton\r\n              onClick={this.handleOtherExperienceDialogClose}\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n            >\r\n              <i className=\"material-icons\">close</i>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {this.state.selectedOtherExperience.dialogText.map(\r\n              (text, index) => {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    style={{ display: \"inline-flex\", marginBottom: \"10px\" }}\r\n                  >\r\n                    <i className=\"material-icons\">arrow_right</i>\r\n                    <DialogContentText\r\n                      style={{\r\n                        marginLeft: \"10px\",\r\n                        color: \"#363738\"\r\n                      }}\r\n                    >\r\n                      {text}\r\n                    </DialogContentText>\r\n                  </div>\r\n                );\r\n              }\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleOpenResume = event => {\r\n    this.setState({ resumeOpen: true });\r\n  };\r\n\r\n  handleCloseResume = event => {\r\n    this.setState({ resumeOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>\r\n          {localized().greeting}\r\n          {<Emoji symbol=\"👋\" />}\r\n        </Typography>\r\n        <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n          <Button variant=\"outlined\" onClick={this.handleOpenResume}>\r\n            {localized().openResume}\r\n          </Button>\r\n        </div>\r\n\r\n        {this.state.resumeOpen && (\r\n          <ResumeDialog onClose={this.handleCloseResume} dialogSize=\"md\" />\r\n        )}\r\n        {/* Short Intro */}\r\n        {this.getIntro()}\r\n\r\n        {/* Current Experiences */}\r\n        {this.getCurrentExperiences()}\r\n\r\n        {/* Other Experiences */}\r\n        {this.getOtherExperiencesHeader()}\r\n        {this.getOtherExperiences()}\r\n        {this.getOtherExperiencesPopup()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMe;\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { localized } from \"./Localization\";\r\n\r\nconst styles = {\r\n  inline: {\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    marginTop: \"10px\",\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  }\r\n};\r\n\r\nclass ReadOnlyCopyField extends Component {\r\n  emailRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      copyToastId: null\r\n    };\r\n  }\r\n\r\n  getCopyButton = () => {\r\n    if (document.queryCommandSupported(\"copy\")) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton style={styles.inline} onClick={this.copyToClipboard}>\r\n            <Icon style={{ fontSize: \"20px\" }}>file_copy</Icon>\r\n          </IconButton>\r\n        </InputAdornment>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  copyToClipboard = e => {\r\n    this.emailRef.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n\r\n    if (!toast.isActive(this.state.copyToastId)) {\r\n      let newToastId = toast(localized().copyConfirmNotification, {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true\r\n      });\r\n      this.setState({\r\n        copyToastId: newToastId\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        <TextField\r\n          style={styles.text}\r\n          variant=\"outlined\"\r\n          value={text}\r\n          inputRef={textArea => (this.emailRef = textArea)}\r\n          InputProps={{\r\n            endAdornment: this.getCopyButton(),\r\n            style: { fontSize: 15 },\r\n            readOnly: true\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadOnlyCopyField;\r\n","import React, { Component } from \"react\";\r\nimport { localized } from \"../../Localization\";\r\nimport {\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary\r\n} from \"@material-ui/core\";\r\nimport Emoji from \"../../Emoji\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  subheader: {\r\n    fontSize: \"22px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  },\r\n\r\n  drawerSummary: {\r\n    fontSize: \"22px\",\r\n    marginLeft: \"10px\"\r\n  },\r\n\r\n  paper: {\r\n    zIndex: 1,\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\",\r\n    width: \"100%\"\r\n  },\r\n\r\n  slideTimeout: {\r\n    enter: 500\r\n  }\r\n};\r\n\r\nclass TabInterests extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentHoverInterest: null\r\n    };\r\n  }\r\n\r\n  getInterests = () => {\r\n    return localized().tabs.interests;\r\n  };\r\n\r\n  getInterestContent = index => {\r\n    return this.getInterests().content[index];\r\n  };\r\n\r\n  handleHoverOverInterest = index => {\r\n    this.setState({ currentHoverInterest: index });\r\n  };\r\n\r\n  renderInterests = () => {\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <div>\r\n          {this.getInterests().content.map((item, index) => {\r\n            return (\r\n              <ExpansionPanel\r\n                key={index}\r\n                expanded={false}\r\n                style={{\r\n                  backgroundColor:\r\n                    this.state.currentHoverInterest === index ? \"#eeeeee\" : \"\"\r\n                }}\r\n              >\r\n                <ExpansionPanelSummary\r\n                  key={index}\r\n                  onMouseEnter={this.handleHoverOverInterest.bind(this, index)}\r\n                >\r\n                  <i className=\"material-icons\">arrow_right</i>\r\n                  <i className=\"material-icons\">{item.icon}</i>\r\n                  <Typography style={styles.drawerSummary} noWrap>\r\n                    {item.summary}\r\n                  </Typography>\r\n                </ExpansionPanelSummary>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          {this.state.currentHoverInterest === null && (\r\n            <Slide\r\n              direction=\"left\"\r\n              in={this.state.currentHoverInterest === null}\r\n              exit={false}\r\n              timeout={styles.slideTimeout}\r\n            >\r\n              <Paper elevation={4} style={styles.paper}>\r\n                <div style={{ margin: \"10px\" }}>\r\n                  <i className=\"material-icons\" style={{ float: \"left\" }}>\r\n                    arrow_left\r\n                  </i>\r\n                  <i className=\"material-icons\" style={{ float: \"left\" }}>\r\n                    touch_app\r\n                  </i>\r\n                  <Typography style={styles.paragraph} noWrap>\r\n                    {\" \"}\r\n                    Hover over one of my interests!\r\n                  </Typography>\r\n                </div>\r\n              </Paper>\r\n            </Slide>\r\n          )}\r\n          {this.getInterests().content.map((item, index) => {\r\n            if (this.state.currentHoverInterest === index) {\r\n              return (\r\n                <Slide\r\n                  key={index}\r\n                  direction=\"left\"\r\n                  in={this.state.currentHoverInterest === index}\r\n                  exit={false}\r\n                  timeout={styles.slideTimeout}\r\n                >\r\n                  <Paper elevation={4} style={styles.paper}>\r\n                    <div style={{ margin: \"10px\" }}>{item.details}</div>\r\n                  </Paper>\r\n                </Slide>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>\r\n          {localized().tabs.interests.header}\r\n        </Typography>\r\n\r\n        {/* Sub-header */}\r\n        <Typography style={styles.subheader}>\r\n          {localized().tabs.interests.subheader}\r\n          {<Emoji symbol=\"😄\" />}\r\n        </Typography>\r\n        <br />\r\n\r\n        {/* Interest Overview */}\r\n        {this.renderInterests()}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabInterests;\r\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Tooltip, Button } from \"@material-ui/core\";\nimport TabMe from \"./tabs/me/TabMe\";\nimport ReadOnlyCopyField from \"./ReadOnlyCopyField\";\nimport { EMAIL } from \"./Info\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport getJapanFlagSVG, { getCanadianFlagSVG } from \"./Flags\";\nimport { localized, getLanguage, setLanguage } from \"./Localization\";\nimport TabInterests from \"./tabs/interests/TabInterests\";\nimport { getCurrentYear } from \"./Utils\";\n\ntoast.configure();\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  appBar: {\n    marginBottom: \"20px\"\n  },\n\n  title: {\n    fontSize: \"50px\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n\n  footer: {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    margin: \"10px\",\n    align: \"center\"\n  },\n\n  svgButton: {\n    position: \"absolute\",\n    margin: \"5px\"\n  }\n};\n\n// This workaround is for this issue: https://github.com/mui-org/material-ui/issues/12597\nfunction CloneProps(props) {\n  const { children, ...other } = props;\n  return children(other);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ currentTab: value });\n  };\n\n  changeLanguage = (event, language) => {\n    setLanguage(language);\n    this.setState({}); // force the state to refresh -> localization updates after setting language\n  };\n\n  render() {\n    const { currentTab } = this.state;\n\n    return (\n      <div className={styles.root}>\n        <AppBar position=\"static\" color=\"default\" style={styles.appBar}>\n          {/* TODO: make a \"supported languages\" module to reduce this code */}\n          {getLanguage() !== \"jp\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"jp\");\n                }}\n              >\n                {getJapanFlagSVG()}\n              </Button>\n            </div>\n          )}\n          {getLanguage() !== \"en\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"en\");\n                }}\n              >\n                {getCanadianFlagSVG()}\n              </Button>\n            </div>\n          )}\n          <Typography style={styles.title} variant=\"h2\">\n            {localized().nameFirst}\n            {localized().nameSeperator}\n            {localized().nameLast}\n          </Typography>\n          <ReadOnlyCopyField text={EMAIL} />\n\n          {/* TODO: Put icon in the localization module for en (and can be overriden for other lang), \n          then make tabs based on localization strings*/}\n          <Tabs value={currentTab} onChange={this.handleChange} centered>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip title={localized().tabs.me.tooltip} placement=\"bottom\">\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      label={<span>{localized().tabs.me.label}</span>}\n                      icon={<i className=\"material-icons\">face</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={localized().tabs.projects.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      disabled\n                      label={<span>{localized().tabs.projects.label}</span>}\n                      icon={<i className=\"material-icons\">laptop_mac</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={localized().tabs.interests.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      label={<span>{localized().tabs.interests.label}</span>}\n                      icon={<i className=\"material-icons\">favorite_border</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n          </Tabs>\n        </AppBar>\n        {currentTab === 0 && <TabMe />}\n        {currentTab === 1 && <div />}\n        {currentTab === 2 && <TabInterests />}\n\n        <AppBar position=\"static\" color=\"default\">\n          <Typography style={styles.footer}>\n            © {getCurrentYear()} Alexander Jurcau\n          </Typography>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport default function getJapanFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 100 50\"\r\n    >\r\n      <rect fill=\"#000\" height=\"50\" width=\"100\" />\r\n      <rect fill=\"#fff\" height=\"46\" width=\"96\" x=\"2\" y=\"2\" />\r\n      <circle fill=\"#bc002d\" cx=\"50\" cy=\"25\" r=\"12.5\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function getCanadianFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 9600 4800\"\r\n    >\r\n      <path\r\n        fill=\"#d52b1e\"\r\n        d=\"m0 0h2400l99 99h4602l99-99h2400v4800h-2400l-99-99h-4602l-99 99H0z\"\r\n      />\r\n      <path\r\n        fill=\"#fff\"\r\n        d=\"m2400 0h4800v4800h-4800zm2490 4430-45-863a95 95 0 0 1 111-98l859 151-116-320a65 65 0 0 1 20-73l941-762-212-99a65 65 0 0 1-34-79l186-572-542 115a65 65 0 0 1-73-38l-105-247-423 454a65 65 0 0 1-111-57l204-1052-327 189a65 65 0 0 1-91-27l-332-652-332 652a65 65 0 0 1-91 27l-327-189 204 1052a65 65 0 0 1-111 57l-423-454-105 247a65 65 0 0 1-73 38l-542-115 186 572a65 65 0 0 1-34 79l-212 99 941 762a65 65 0 0 1 20 73l-116 320 859-151a95 95 0 0 1 111 98l-45 863z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;"],"sourceRoot":""}