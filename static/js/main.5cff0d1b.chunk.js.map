{"version":3,"sources":["Info.js","localization.js","TabMe.js","ReadOnlyCopyField.js","App.js","flags.js","serviceWorker.js","index.js"],"names":["BIRTHDAY","Date","strings","LocalizedStrings","en","nameFirst","nameSeperator","nameLast","tabs","me","label","tooltip","projects","interests","copyConfirmNotification","currentExperiences","primary","secondary","icon","otherExperiences","dialogTitle","dialogText","jp","styles","root","marginLeft","marginRight","header","fontSize","textAlign","align","paragraph","TabMe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateAge","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","getCurrentExperiences","react_default","a","createElement","index_es","map","experience","index","key","className","style","handleOtherExperienceClick","event","setState","otherExperienceDialogOpen","selectedOtherExperience","handleOtherExperienceDialogClose","getOtherExperiences","button","divider","onClick","state","Typography_default","open","onClose","position","right","top","text","display","marginBottom","color","Component","inline","marginTop","ReadOnlyCopyField","emailRef","getCopyButton","document","queryCommandSupported","InputAdornment_default","IconButton_default","copyToClipboard","Icon_default","e","select","execCommand","target","focus","toast","isActive","copyToastId","newToastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","_this2","TextField_default","variant","value","inputRef","textArea","InputProps","endAdornment","readOnly","configure","flexGrow","width","appBar","title","footer","margin","svgButton","CloneProps","children","objectWithoutProperties","App","handleChange","currentTab","changeLanguage","language","setLanguage","AppBar_default","getLanguage","xmlns","height","viewBox","fill","x","y","cx","cy","r","d","src_ReadOnlyCopyField","Tabs_default","onChange","centered","tabProps","placement","Tab_default","assign","disabled","src_TabMe","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cff0d1b.chunk.js","sourcesContent":["export const EMAIL = \"jurcaua@gmail.com\";\r\nexport const BIRTHDAY = new Date(1997, 8, 25);\r\n","import LocalizedStrings from \"react-localization\";\r\n\r\nexport const strings = new LocalizedStrings({\r\n  en: {\r\n    nameFirst: \"Alexander\",\r\n    nameSeperator: \" \",\r\n    nameLast: \"Jurcau\",\r\n    tabs: {\r\n      me: {\r\n        label: \"Me\",\r\n        tooltip: \"Qualification overview.\"\r\n      },\r\n      projects: {\r\n        label: \"Projects\",\r\n        tooltip: \"Notable projects and experience.\"\r\n      },\r\n      interests: {\r\n        label: \"Interests\",\r\n        tooltip: \"Things I like.\"\r\n      }\r\n    },\r\n    copyConfirmNotification: \"Copied to clipboard!\",\r\n    currentExperiences: [\r\n      {\r\n        primary:\r\n          \"Leading development on a company-wide service-consolidating meeting productivity tool\",\r\n        secondary: \"Python / C#\",\r\n        icon: \"code\"\r\n      },\r\n      {\r\n        primary: \"Maintaining our automated integration-testing pipeline\",\r\n        secondary: \"C++\",\r\n        icon: \"code\"\r\n      },\r\n      {\r\n        primary: \"Developing an online service management web tool\",\r\n        secondary: \"React / Redux\",\r\n        icon: \"code\"\r\n      }\r\n    ],\r\n    otherExperiences: [\r\n      {\r\n        primary:\r\n          \"Working for an augmented reality startup -- as a programmer and tech consultant\",\r\n        secondary: \"Unity\",\r\n        icon: \"videogame_asset\",\r\n        dialogTitle: \"ARnocular - Augmented Reality Software Developer\",\r\n        dialogText: [\r\n          \"Implemented a system that dynamically downloads AssetBundles and displays 3D models from a database, requesting and parsing CSV files\",\r\n          \"Developed an accurate linear regress system using GPS points to smoothly move between perceived user locations\",\r\n          \"Collaborated smoothly with Git version control; experience with Prod/QA/Dev pipeline, branching, merging, stashing, working with a remote repo\"\r\n        ]\r\n      },\r\n      {\r\n        primary:\r\n          \"Teaching video game design to at-risk youth, following a game to completion\",\r\n        secondary: \"Construct 2\",\r\n        icon: \"school\",\r\n        dialogTitle: \"Youth Fusion - Game Design Program Coordinator\",\r\n        dialogText: [\r\n          \"Taught for a local non-profit after-school program aimed to decreasing high school drop-out rates by teaching all aspects of video game development\",\r\n          \"Oversaw the development of 2 fully polished games, following a Prototyping/Alpha/Beta/Gold staging process\",\r\n          \"Verbally communicated complex game design concepts to children in simple and easy-to-understand ways\"\r\n        ]\r\n      },\r\n      {\r\n        primary:\r\n          \"Working as Systems Support doing data validation, and integration and regression testing\",\r\n        secondary: \"SQL Server (TSQL)\",\r\n        icon: \"table_chart\",\r\n        dialogTitle: \"Inmar - Systems Support\",\r\n        dialogText: [\r\n          \"Developed SSIS packages for data transfer between SQL Server databases and uploads/downloads from/to Excel files\",\r\n          \"Developed T-SQL scripts for comprehensive field level discrepancy reports\",\r\n          \"Created testing automation jobs for data integrity and consistency, including test case creation, execution and results logging\"\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  jp: {\r\n    nameFirst: \"ジュルコ\",\r\n    nameSeperator: \"・\",\r\n    nameLast: \"アレックス\",\r\n    tabs: {\r\n      me: {\r\n        label: \"私について\",\r\n        tooltip: \"資格概要\"\r\n      },\r\n      projects: {\r\n        label: \"プロジェクト\",\r\n        tooltip: \"最高の作ったプロジェクト\"\r\n      },\r\n      interests: {\r\n        label: \"興味\",\r\n        tooltip: \"好きなこと\"\r\n      }\r\n    },\r\n    copyConfirmNotification: \"コーピした!\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { BIRTHDAY } from \"./Info\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { strings } from \"./localization\";\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\"\r\n  },\r\n\r\n  header: {\r\n    fontSize: \"28px\",\r\n    textAlign: \"center\",\r\n    align: \"center\"\r\n  },\r\n\r\n  paragraph: {\r\n    fontSize: \"22px\"\r\n  }\r\n};\r\n\r\nclass TabMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOtherExperience: null,\r\n      otherExperienceDialogOpen: false\r\n    };\r\n  }\r\n\r\n  calculateAge = () => {\r\n    var ageDifMs = Date.now() - BIRTHDAY.getTime();\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  };\r\n\r\n  getCurrentExperiences = () => {\r\n    const { currentExperiences } = strings;\r\n    return (\r\n      <List>\r\n        {currentExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleOtherExperienceClick = (event, experience) => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: true,\r\n      selectedOtherExperience: experience\r\n    });\r\n  };\r\n\r\n  handleOtherExperienceDialogClose = event => {\r\n    this.setState({\r\n      otherExperienceDialogOpen: false\r\n    });\r\n  };\r\n\r\n  getOtherExperiences = () => {\r\n    const { otherExperiences } = strings;\r\n    return (\r\n      <List>\r\n        {otherExperiences.map((experience, index) => {\r\n          return (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              divider\r\n              onClick={event => {\r\n                this.handleOtherExperienceClick(event, experience);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">{experience.icon}</i>\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                style={styles.paragraph}\r\n                primary={experience.primary}\r\n                secondary={experience.secondary}\r\n              />\r\n              <ListItemIcon>\r\n                <i className=\"material-icons\">keyboard_arrow_right</i>\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.root}>\r\n        {/* Header */}\r\n        <Typography style={styles.header}>Hello there! I'm Alex.</Typography>\r\n\r\n        {/* Short Intro */}\r\n        <Typography style={styles.paragraph}>\r\n          Currently {this.calculateAge()} years old, and a fourth year student\r\n          at the <b>University of Toronto</b> -- studying Computer Science with\r\n          focuses in Algorithms, System Design, and Game Design.\r\n        </Typography>\r\n        <br />\r\n\r\n        {/* Current Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          I am currently doing a 15 month internship at <b>Ubisoft Toronto</b>{\" \"}\r\n          where I work on the tools team. Responsible for a variety of things,\r\n          my focuses lie in:\r\n        </Typography>\r\n        {this.getCurrentExperiences()}\r\n\r\n        {/* Other Experiences */}\r\n        <Typography style={styles.paragraph}>\r\n          Other related experience in the industry includes:\r\n        </Typography>\r\n        <List>{this.getOtherExperiences()}</List>\r\n\r\n        {this.state.selectedOtherExperience && (\r\n          <Dialog\r\n            open={this.state.otherExperienceDialogOpen}\r\n            onClose={this.handleOtherExperienceDialogClose}\r\n          >\r\n            <DialogTitle>\r\n              {this.state.selectedOtherExperience.dialogTitle}\r\n              <IconButton\r\n                onClick={this.handleOtherExperienceDialogClose}\r\n                style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n              </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {this.state.selectedOtherExperience.dialogText.map(text => {\r\n                return (\r\n                  <div style={{ display: \"inline-flex\", marginBottom: \"10px\" }}>\r\n                    <i className=\"material-icons\">arrow_right</i>\r\n                    <DialogContentText\r\n                      style={{\r\n                        marginLeft: \"10px\",\r\n                        color: \"#363738\"\r\n                      }}\r\n                    >\r\n                      {text}\r\n                    </DialogContentText>\r\n                  </div>\r\n                );\r\n              })}\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMe;\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { strings } from \"./localization\";\r\n\r\nconst styles = {\r\n  inline: {\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  },\r\n\r\n  text: {\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    marginTop: \"10px\",\r\n    display: \"inline-flex\",\r\n    align: \"center\"\r\n  }\r\n};\r\n\r\nclass ReadOnlyCopyField extends Component {\r\n  emailRef = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      copyToastId: null\r\n    };\r\n  }\r\n\r\n  getCopyButton = () => {\r\n    if (document.queryCommandSupported(\"copy\")) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <IconButton style={styles.inline} onClick={this.copyToClipboard}>\r\n            <Icon style={{ fontSize: \"20px\" }}>file_copy</Icon>\r\n          </IconButton>\r\n        </InputAdornment>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  copyToClipboard = e => {\r\n    this.emailRef.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n\r\n    if (!toast.isActive(this.state.copyToastId)) {\r\n      let newToastId = toast(strings.copyConfirmNotification, {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true\r\n      });\r\n      this.setState({\r\n        copyToastId: newToastId\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div align=\"center\">\r\n        <TextField\r\n          style={styles.text}\r\n          variant=\"outlined\"\r\n          value={text}\r\n          inputRef={textArea => (this.emailRef = textArea)}\r\n          InputProps={{\r\n            endAdornment: this.getCopyButton(),\r\n            style: { fontSize: 15 },\r\n            readOnly: true\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadOnlyCopyField;\r\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Tooltip, Button } from \"@material-ui/core\";\nimport TabMe from \"./TabMe\";\nimport ReadOnlyCopyField from \"./ReadOnlyCopyField\";\nimport { EMAIL } from \"./Info\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport getJapanFlagSVG, { getCanadianFlagSVG } from \"./flags\";\nimport { strings } from \"./localization\";\n\ntoast.configure();\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: \"100%\"\n  },\n\n  appBar: {\n    marginBottom: \"20px\"\n  },\n\n  title: {\n    fontSize: \"50px\",\n    textAlign: \"center\",\n    marginTop: \"10px\"\n  },\n\n  footer: {\n    fontSize: \"20px\",\n    textAlign: \"center\",\n    margin: \"10px\",\n    align: \"center\"\n  },\n\n  svgButton: {\n    position: \"absolute\",\n    margin: \"5px\"\n  }\n};\n\n// This workaround is for this issue: https://github.com/mui-org/material-ui/issues/12597\nfunction CloneProps(props) {\n  const { children, ...other } = props;\n  return children(other);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 0\n    };\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ currentTab: value });\n  };\n\n  changeLanguage = (event, language) => {\n    strings.setLanguage(language);\n    this.setState({}); // force the state to refresh -> localization updates after setting language\n  };\n\n  render() {\n    const { currentTab } = this.state;\n\n    return (\n      <div className={styles.root}>\n        <AppBar position=\"static\" color=\"default\" style={styles.appBar}>\n          {/* TODO: make a \"supported languages\" module to reduce this code */}\n          {strings.getLanguage() !== \"jp\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"jp\");\n                }}\n              >\n                {getJapanFlagSVG()}\n              </Button>\n            </div>\n          )}\n          {strings.getLanguage() !== \"en\" && (\n            <div style={styles.svgButton}>\n              <Button\n                onClick={event => {\n                  this.changeLanguage(event, \"en\");\n                }}\n              >\n                {getCanadianFlagSVG()}\n              </Button>\n            </div>\n          )}\n          <Typography style={styles.title} variant=\"h2\">\n            {strings.nameFirst}\n            {strings.nameSeperator}\n            {strings.nameLast}\n          </Typography>\n          <ReadOnlyCopyField text={EMAIL} />\n\n          {/* TODO: Put icon in the localization module for en (and can be overriden for other lang), \n          then make tabs based on localization strings*/}\n          <Tabs value={currentTab} onChange={this.handleChange} centered>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip title={strings.tabs.me.tooltip} placement=\"bottom\">\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      label={<span>{strings.tabs.me.label}</span>}\n                      icon={<i className=\"material-icons\">face</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={strings.tabs.projects.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      disabled\n                      label={<span>{strings.tabs.projects.label}</span>}\n                      icon={<i className=\"material-icons\">laptop_mac</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n            <CloneProps>\n              {tabProps => (\n                <Tooltip\n                  title={strings.tabs.interests.tooltip}\n                  placement=\"bottom\"\n                >\n                  <div>\n                    <Tab\n                      {...tabProps}\n                      disabled\n                      label={<span>{strings.tabs.interests.label}</span>}\n                      icon={<i className=\"material-icons\">favorite_border</i>}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n            </CloneProps>\n          </Tabs>\n        </AppBar>\n        {currentTab === 0 && <TabMe />}\n        {currentTab === 1 && <div />}\n        {currentTab === 2 && <div />}\n\n        <AppBar position=\"static\" color=\"default\">\n          <Typography style={styles.footer}>© 2019 Alexander Jurcau</Typography>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nexport default function getJapanFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 100 50\"\r\n    >\r\n      <rect fill=\"#000\" height=\"50\" width=\"100\" />\r\n      <rect fill=\"#fff\" height=\"46\" width=\"96\" x=\"2\" y=\"2\" />\r\n      <circle fill=\"#bc002d\" cx=\"50\" cy=\"25\" r=\"12.5\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function getCanadianFlagSVG() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"60\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 9600 4800\"\r\n    >\r\n      <path\r\n        fill=\"#d52b1e\"\r\n        d=\"m0 0h2400l99 99h4602l99-99h2400v4800h-2400l-99-99h-4602l-99 99H0z\"\r\n      />\r\n      <path\r\n        fill=\"#fff\"\r\n        d=\"m2400 0h4800v4800h-4800zm2490 4430-45-863a95 95 0 0 1 111-98l859 151-116-320a65 65 0 0 1 20-73l941-762-212-99a65 65 0 0 1-34-79l186-572-542 115a65 65 0 0 1-73-38l-105-247-423 454a65 65 0 0 1-111-57l204-1052-327 189a65 65 0 0 1-91-27l-332-652-332 652a65 65 0 0 1-91 27l-327-189 204 1052a65 65 0 0 1-111 57l-423-454-105 247a65 65 0 0 1-73 38l-542-115 186 572a65 65 0 0 1-34 79l-212 99 941 762a65 65 0 0 1 20 73l-116 320 859-151a95 95 0 0 1 111 98l-45 863z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}